DROP TABLE P_DOG_BREED_PERCENTAGE;
DROP TABLE P_OWNER_DOG_INT;
DROP TABLE P_SERVICE_CERTIFICATIONS;
DROP TABLE P_SERVICE_DOGS;
DROP TABLE P_OWNER;
DROP TABLE P_PET;
DROP TABLE P_PHOTO;
DROP TABLE P_INCIDENT;
DROP TABLE P_DOGBREED;
DROP TABLE P_DOG;



CREATE TABLE P_DOG(
DOG_ID          CHAR(5)         NOT NULL ,
DOG_NAME        VARCHAR2(30)   DEFAULT 'UNKNOWN'  NOT NULL,
DOG_BIRTH_MONTH NUMBER(2,0)   NULL,
DOG_BIRTH_YEAR  NUMBER(4,0)  NOT NULL,
SEX             CHAR(1)      NOT NULL,
SPAYED_OR_NEUTERED CHAR(1)  DEFAULT'N'  NOT NULL,
CONSTRAINT    P_DOG_PK          PRIMARY KEY(DOG_ID),
CONSTRAINT   DOG_BIRTH_MONTH_1  CHECK(DOG_BIRTH_MONTH BETWEEN 1 AND 12),
CONSTRAINT   P_DOG_BIRTH_YEAR_1   CHECK(DOG_BIRTH_YEAR BETWEEN 1980 AND 2030),
CONSTRAINT    P_SEX_1          CHECK (UPPER(SEX) IN ('M','F')) 
);

CREATE TABLE P_DOGBREED(
BREED_ID CHAR(5)  NOT NULL,
BREED_COMMON_NAME VARCHAR2(60) NOT NULL,
CONSTRAINT P_DOGBREED_PK   PRIMARY KEY(BREED_ID),
CONSTRAINT P_DOGBREED_UK1  UNIQUE (BREED_COMMON_NAME));


CREATE TABLE P_DOG_BREED_PERCENTAGE(
DOG_ID CHAR(5)   NOT NULL,
BREED_ID CHAR(5)  NOT NULL,
PERCENT   NUMBER(5,2)    DEFAULT 100,
CONSTRAINT P_DOG_BREED_PERCENTAGE_PK    PRIMARY KEY(DOG_ID, BREED_ID),
CONSTRAINT P_DOG_B_FK  FOREIGN KEY(DOG_ID) REFERENCES P_DOG(DOG_ID),
CONSTRAINT P_DOG_B2_FK  FOREIGN KEY(BREED_ID) REFERENCES P_DOGBREED(BREED_ID),
 CONSTRAINT P_DOG_B3_CHK   CHECK(PERCENT BETWEEN 0 AND 100)
 );



CREATE TABLE P_INCIDENT(
DOG_ID                 CHAR(5)       NOT NULL,
INCIDENT_NUM           NUMBER(3)     DEFAULT'1',
INCIDENT_TYPE          VARCHAR(30)   DEFAULT'OFF LEASH',
DATE_OF_INCIDENT       DATE          DEFAULT SYSDATE NOT NULL,
HAS_MAJOR_HUMAN_INJURY CHAR(1)       DEFAULT'N',
INC_DESCRIPTION VARCHAR2(1000)        NULL,
CONSTRAINT P_INCIDENT_PK  PRIMARY KEY(DOG_ID, INCIDENT_NUM),
CONSTRAINT    P_INCIDENT_HUMAN_INJURY_CHK  CHECK
                  (HAS_MAJOR_HUMAN_INJURY IN ('Y','N')),
CONSTRAINT  P_INCIDENT_P_DOG_FK FOREIGN KEY (DOG_ID) REFERENCES P_DOG(DOG_ID)
                  );

CREATE TABLE P_OWNER(
OWNER_ID         CHAR(5)    NOT NULL,
OWNER_FNAME       VARCHAR2(40) NULL,
OWNER_LNAME       VARCHAR2(60) NOT NULL,
STREETADDRESS1    VARCHAR2(60) NULL,
STREETADDRESS2    VARCHAR2(60) NULL,
CITY               VARCHAR2(60) DEFAULT'LARKSVILLE' NULL,
STATE               CHAR (2)      DEFAULT'PA' NULL,
ZIP                CHAR(5)       DEFAULT'18704' NULL,
TIMESTAMP          TIMESTAMP(2)  DEFAULT SYSDATE NOT NULL,
PHONE              CHAR(10)      NULL,
EMAIL              VARCHAR2(40)  NULL,
CONSTRAINT P_OWNERS_PK PRIMARY KEY(OWNER_ID),
CONSTRAINT P_OWNERS_UK1 UNIQUE(OWNER_FNAME,OWNER_LNAME, STREETADDRESS1, STREETADDRESS2,ZIP),
CONSTRAINT P_OWNER_ZIP_1  CHECK (ZIP IN('18704','18708','18651')),
CONSTRAINT P_OWNER_EMAIL_1  CHECK(EMAIL LIKE'%_@%_.%_')

);


CREATE TABLE P_OWNER_DOG_INT(
OWNER_ID          CHAR(5)    NOT NULL,
DOG_ID            CHAR(5)    NOT NULL,
CONSTRAINT P_OWNER_DOG_INT_PK PRIMARY KEY(OWNER_ID, DOG_ID),
CONSTRAINT P_OWNER_DOG_INT_FK FOREIGN KEY(OWNER_ID) REFERENCES P_OWNER(OWNER_ID),
CONSTRAINT P_OWNER_DOG_INT_FK1 FOREIGN KEY(DOG_ID) REFERENCES P_DOG(DOG_ID)
);
 
CREATE TABLE P_PET (
DOG_ID                          CHAR (5)                              NOT NULL,
PET_DOG_LICENSE_NUM             CHAR(10)      DEFAULT 'UNLICENSED'    NOT NULL,
DATE_OF_LAST_PAYMENT            DATE          DEFAULT SYSDATE         NULL,
TOTAL_FEES_CURRENT_YEAR         NUMBER(5,2)   DEFAULT 25              NOT NULL,
TOTAL_PAYMENTS_CURRENT_YEAR     NUMBER(5,2)   DEFAULT 0               NOT NULL,
BALANCE_DUE_CURRENT_YEAR        NUMBER (5,2)                          NULL,
CONSTRAINT      P_PET_PK          PRIMARY KEY (DOG_ID),
CONSTRAINT      P_PET_UK1         UNIQUE(PET_DOG_LICENSE_NUM),
CONSTRAINT      P_PET_P_DOG_FK          FOREIGN KEY (DOG_ID)
                   REFERENCES P_DOG(DOG_ID)
);




 
CREATE TABLE P_PHOTO (
PHOTO_ID                CHAR(5)                                      NOT NULL,
PHOTO_FILENAME          VARCHAR2(60)        DEFAULT 'NOIMAGE.JPG'    NOT NULL,
PHOTO_TIMESTAMP         TIMESTAMP(2)        DEFAULT SYSDATE          NOT NULL,
DOG_ID                  CHAR(5)                                      NOT NULL,
CONSTRAINT     P_PHOTO_PK         PRIMARY KEY (PHOTO_ID),
CONSTRAINT     P_PHOTO_P_DOG_FK    FOREIGN KEY (DOG_ID)
                 REFERENCES P_DOG(DOG_ID),
CONSTRAINT     P_PHOTO_CHK        CHECK (UPPER(PHOTO_FILENAME) LIKE '%.JPG')       
);

CREATE TABLE P_SERVICE_DOGS(
DOG_ID                   CHAR(5)  NOT NULL,
SERVICE_DOG_LICENSE_NUM   VARCHAR2(20)  NOT NULL,
OWNER_ID_ASSIGNED        CHAR(5)   NULL,
CONSTRAINT P_SERVICE_DOGS_PK PRIMARY KEY(DOG_ID),
CONSTRAINT P_SERVICE_DOGS_UK1 UNIQUE(SERVICE_DOG_LICENSE_NUM),
CONSTRAINT P_SERVICE_DOGS_FK  FOREIGN KEY(DOG_ID) REFERENCES P_DOG(DOG_ID),
CONSTRAINT P_SERVICE_DOGS_FK1 FOREIGN KEY (OWNER_ID_ASSIGNED) REFERENCES P_OWNER(OWNER_ID)
);

CREATE TABLE P_SERVICE_CERTIFICATIONS (
CERT_ID                     CHAR(5)               NOT NULL,
CERTIFICATION               VARCHAR2(40)          NOT NULL,
ORIGINATION_DATE            DATE                  NULL,
MOST_RECENT_RENEWAL_DATE    DATE                  NULL,
CERT_EXPIRATION_DATE        DATE                  NULL,
DOG_ID                      CHAR(5)               NOT NULL,
CONSTRAINT    P_SERVICE_CERTIFICATIONS_PK           PRIMARY KEY (CERT_ID),
CONSTRAINT    P_SERVICE_CERTIFICATIONS_UK1           UNIQUE (CERTIFICATION,DOG_ID),
CONSTRAINT    P_SERVICE_CERT_P_SERVICE_DOGS_FK      FOREIGN KEY (DOG_ID)
                     REFERENCES P_SERVICE_DOGS(DOG_ID)
);

/* 
THIS SCRIPT IS CALLED 'REFRESH DATA' FOR A REASON.  IT WILL RETURN
YOUR DATA IN YOUR DATABASE (IF PROPERLY CONSTRUCTED) TO THE REQUIRED STATE 
FOR SUBMISSION.

YOU MAY RUN THIS AS MANY TIMES AS YOU WANT, IT FIRST ERASES ALL DATA  ALONG 
WITH ANY CHANGES OR ADDITIONS AND THEN REINSERTS THE ORIGINAL WITH NO CHANGES.

IF YOU HAVE (OR MIGHT HAVE) CHANGED ANY OF THE SUPPLIED DATA, YOU MUST RUN 
THIS SCRIPT AGAIN PRIOR TO SUBMISSION

IF YOU RECEIVE ERRORS WHEN YOU RUN THIS SCRIPT IT IS PROBABLY (ALMOST CERTAINLY)
A PROBLEM WITH THE STRUCTURE OF YOUR DATABASE.  THE MOST COMMON REASON ERRORS 
ARE GENERATED IS DUE TO SPELLING ERRORS IN TABLE AND ATTRIBUTE NAMES.  
MISCONFIGURED CONSTRAINTS CAN ALSO CAUSE ERRORS.  UNDERSTAND THE ERROR AND
YOU SHOULD UNDERSTAND HOW TO FIX IT.  IF (AFTER A GOOD TRY) YOU CANNOT FIGURE
IT OUT - ASK (SEND ME THE STATEMENT AND ERROR MESSAGE IN AN EMAIL).
*/
/*
AS ANOTHER NOTE, THIS IS SAMPLE TEST DATA SUFFICIENT FOR OUR PURPOSES.  I AM 
CERTAIN THAT YOU CAN THINK OF OTHER THINGS THAT SHOULD BE IN THE OPERATIONAL
DATABASE.  THIS IS UNIMPORTANT AT THIS STAGE
OF DATABASE IMPLEMENTATION.  FULL DATA AND VOLUME TESTING WOULD HAPPEN LATER.
*/
COMMIT;
REM EMPTY ALL DATA ***OBVIOUS WARNING***


DELETE FROM P_SERVICE_CERTIFICATIONS;                  
DELETE FROM P_SERVICE_DOGS;
DELETE FROM P_PET;  
DELETE FROM P_OWNER_DOG_INT;
DELETE FROM P_OWNER;
DELETE FROM P_INCIDENT;  
DELETE FROM P_DOG_BREED_PERCENTAGE; 
DELETE FROM P_DOGBREED;
DELETE FROM P_PHOTO;                        
DELETE FROM P_DOG;                  

         
   


REM INSERTING into P_DOG
Insert into P_DOG (DOG_ID,DOG_NAME,DOG_BIRTH_MONTH,DOG_BIRTH_YEAR,SEX,SPAYED_OR_NEUTERED) values ('10001','Loki',3,2013,'M','Y');
Insert into P_DOG (DOG_ID,DOG_NAME,DOG_BIRTH_MONTH,DOG_BIRTH_YEAR,SEX,SPAYED_OR_NEUTERED) values ('10002','Lucky',5,2013,'M','Y');
Insert into P_DOG (DOG_ID,DOG_NAME,DOG_BIRTH_MONTH,DOG_BIRTH_YEAR,SEX,SPAYED_OR_NEUTERED) values ('10003','Lucy',null,2001,'F','Y');
Insert into P_DOG (DOG_ID,DOG_NAME,DOG_BIRTH_MONTH,DOG_BIRTH_YEAR,SEX,SPAYED_OR_NEUTERED) values ('10004','Sandy',null,2005,'F','N');
Insert into P_DOG (DOG_ID,DOG_NAME,DOG_BIRTH_MONTH,DOG_BIRTH_YEAR,SEX,SPAYED_OR_NEUTERED) values ('10005','Tiger',8,2008,'M','N');
Insert into P_DOG (DOG_ID,DOG_NAME,DOG_BIRTH_MONTH,DOG_BIRTH_YEAR,SEX,SPAYED_OR_NEUTERED) values ('10006','Pugli',1,1999,'M','Y');
Insert into P_DOG (DOG_ID,DOG_NAME,DOG_BIRTH_MONTH,DOG_BIRTH_YEAR,SEX,SPAYED_OR_NEUTERED) values ('10007','Sammy',null,2004,'M','N');
Insert into P_DOG (DOG_ID,DOG_NAME,DOG_BIRTH_MONTH,DOG_BIRTH_YEAR,SEX,SPAYED_OR_NEUTERED) values ('10008','Rex',null,2006,'M','Y');
Insert into P_DOG (DOG_ID,DOG_NAME,DOG_BIRTH_MONTH,DOG_BIRTH_YEAR,SEX,SPAYED_OR_NEUTERED) values ('10009','Flower',3,2008,'F','N');
Insert into P_DOG (DOG_ID,DOG_NAME,DOG_BIRTH_MONTH,DOG_BIRTH_YEAR,SEX,SPAYED_OR_NEUTERED) values ('10010','Princess',2,2012,'F','Y');
Insert into P_DOG (DOG_ID,DOG_NAME,DOG_BIRTH_MONTH,DOG_BIRTH_YEAR,SEX,SPAYED_OR_NEUTERED) values ('10011','Pogo',null,1998,'M','N');
Insert into P_DOG (DOG_ID,DOG_NAME,DOG_BIRTH_MONTH,DOG_BIRTH_YEAR,SEX,SPAYED_OR_NEUTERED) values ('10012','Pepper',null,2005,'F','Y');
Insert into P_DOG (DOG_ID,DOG_NAME,DOG_BIRTH_MONTH,DOG_BIRTH_YEAR,SEX,SPAYED_OR_NEUTERED) values ('10013','Snoopy',null,2007,'M','N');
Insert into P_DOG (DOG_ID,DOG_NAME,DOG_BIRTH_MONTH,DOG_BIRTH_YEAR,SEX,SPAYED_OR_NEUTERED) values ('10014','Hashtag',4,2014,'M','N');
Insert into P_DOG (DOG_ID,DOG_NAME,DOG_BIRTH_MONTH,DOG_BIRTH_YEAR,SEX,SPAYED_OR_NEUTERED) values ('10015','Twitter',2,2014,'F','N');
Insert into P_DOG (DOG_ID,DOG_NAME,DOG_BIRTH_MONTH,DOG_BIRTH_YEAR,SEX,SPAYED_OR_NEUTERED) values ('10016','Fluffy',null,2011,'F','Y');
REM INSERTING into P_DOGBREED
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20001','AFGHAN HOUND');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20002','AIREDALE TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20003','AKBASH DOG');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20004','AKITA');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20005','ALAPAHA BLUE BLOOD BULLDOG');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20006','ALASKAN MALAMUTE');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20007','AMERICAN BULLDOG');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20008','AMERICAN ESKIMO');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20009','AMERICAN FOXHOUND');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20010','AMERICAN PIT BULL TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20011','AMERICAN STAFFORDSHIRE TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20012','AMERICAN TUNNEL TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20013','AMERICAN WATER SPANIEL');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20014','ANATOLIAN SHEPHERD DOG');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20015','AUSTRALIAN CATTLE DOG');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20016','AUSTRALIAN KELPIE');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20017','AUSTRALIAN SHEPHERD');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20018','AUSTRALIAN TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20019','AZAWAKH');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20020','BASENJI');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20021','BASSET HOUND');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20022','BEAGLE');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20023','BEARDED COLLIE');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20024','BEAUCERON');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20025','BEDLINGTON TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20026','BELGIAN LAEKENOIS');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20027','BELGIAN MALINOIS');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20028','BELGIAN SHEEPDOG');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20029','BELGIAN TERVUREN');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20030','BERGER BLANC SWISS');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20031','BERNESE MOUNTAIN DOG');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20032','BICHON FRISE');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20033','BLACK AND TAN COONHOUND');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20034','BLACK RUSSIAN TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20035','BLOODHOUND');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20036','BLUETICK COONHOUND');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20037','BOERBOEL');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20038','BOLOGNESE');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20039','BORDER COLLIE');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20040','BORDER TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20041','BORZOI');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20042','BOSTON TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20043','BOUVIER DES FLANDERS');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20044','BOXER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20045','BOYKIN SPANIEL');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20046','BRIARD');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20047','BRITTANY SPANIEL');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20048','BRUSSELS GRIFFON');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20049','BULL TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20050','BULLDOG');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20051','BULLMASTIFF');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20052','CAIRN TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20053','CANAAN DOG');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20054','CANE CORSO');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20055','CAO DE FILA DE SAO MIGUEL');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20056','CARDIGAN WELSH CORGI');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20057','CAROLINA DOG');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20058','CATAHOULA LEOPARD DOG');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20059','CAUCASIAN OVCHARKA');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20060','CAVALIER KING CHARLES SPANIEL');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20061','CENTRAL ASIAN SHEPHERD');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20062','CHART POLSKI');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20063','CHESAPEAKE BAY RETRIEVER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20064','CHIHUAHUA');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20065','CHINESE CRESTED DOG');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20066','CHINESE SHAR-PEI');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20067','CHINOOK');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20068','CHOW CHOW');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20069','CLUMBER SPANIEL');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20070','COCKER SPANIEL');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20071','COLLIE');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20072','CURLY-COATED RETRIEVER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20073','DACHSHUND (MINIATURE LONGHAIRED)');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20074','DACHSHUND (MINIATURE SMOOTH)');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20075','DACHSHUND (MINIATURE WIREHAIRED)');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20076','DACHSHUND (STANDARD LONGHAIRED)');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20077','DACHSHUND (STANDARD SMOOTH)');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20078','DACHSHUND (STANDARD WIREHAIRED)');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20079','DALMATIAN');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20080','DANDIE DINMONT TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20081','DOBERMAN PINSCHER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20082','DOGO ARGENTINO');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20083','DOGO CANARIO');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20084','DOGUE DE BORDEAUX');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20085','DUTCH SHEPHERD');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20086','ENGLISH COCKER SPANIEL');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20087','ENGLISH FOXHOUND');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20088','ENGLISH JACK RUSSELL TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20089','ENGLISH SETTER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20090','ENGLISH SHEPERD');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20091','ENGLISH SPRINGER SPANIEL');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20092','ESTRELA MOUNTAIN DOG');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20093','FIELD SPANIEL');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20094','FILA BRASILEIRO');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20095','FINNISH LAPPHUND');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20096','FINNISH SPITZ');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20097','FLAT-COATED RETRIEVER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20098','FRENCH BULLDOG');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20099','GERMAN PINSCHER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20100','GERMAN SHEPHERD DOG');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20101','GERMAN SHORTHAIRED POINTER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20102','GERMAN WIREHAIRED POINTER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20103','GIANT SCHNAUZER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20104','GOLDEN RETRIEVER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20105','GORDON SETTER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20106','GRAND BASSET GRIFFON VENDEEN');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20107','GREAT DANE');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20108','GREAT PYRENEES');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20109','GREATER SWISS MOUNTAIN DOG');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20110','GREYHOUND');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20111','HAVANESE');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20112','HOVAWART');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20113','IBIZAN HOUND');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20114','ICELANDIC SHEEPDOG');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20115','IRISH SETTER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20116','IRISH TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20117','IRISH WATER SPANIEL');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20118','IRISH WOLFHOUND');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20119','ITALIAN GREYHOUND');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20120','JACK RUSSELL TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20121','JAPANESE CHIN');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20122','KARELIAN BEAR DOG');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20123','KEESHOND');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20124','KERRY BLUE TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20125','KOMONDOR');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20126','KOREAN JINDO');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20127','KUVASZ');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20128','LABRADOR RETRIEVER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20129','LAKELAND TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20130','LEONBERGER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20131','LHASA APSO');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20132','LOWCHEN');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20133','LURCHER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20134','MALTESE');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20135','MANCHESTER TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20136','MASTIFF');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20137','MINIATURE BULL TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20138','MINIATURE PINSCHER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20139','MINIATURE POODLE');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20140','MINIATURE SCHNAUZER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20141','MIXED BREED');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20142','NEAPOLITAN MASTIFF');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20143','NEWFOUNDLAND');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20144','NORFOLK TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20145','NORWEGIAN ELKHOUND');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20146','NORWICH TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20147','NOVA SCOTIA DUCK TOLLING RETRIEVER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20148','OLD ENGLISH BULL DOGGE');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20149','OLD ENGLISH SHEEPDOG');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20150','OTTERHOUND');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20151','PAPILLON');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20152','PARSON RUSSELL TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20153','PATTERDALE TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20154','PEKINGESE');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20155','PEMBROKE WELSH CORGI');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20156','PETIT BASSET GRIFFON VENDEEN');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20157','PHARAOH HOUND');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20158','POINTER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20159','POLSKI OWCZAREK NIZINNY');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20160','POMERANIAN');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20161','PORTUGUESE WATER DOG');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20162','PRESA CANARIO');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20163','PUG');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20164','PULI');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20165','PUNGSAN');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20166','RAT TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20167','REDBONE COONHOUND');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20168','RHODESIAN RIDGEBACK');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20169','ROTTWEILER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20170','RUSSO - EUROPEAN LAIKA');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20171','SAINT BERNARD');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20172','SALUKI');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20173','SAMOYED');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20174','SCHIPPERKE');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20175','SCOTTISH DEERHOUND');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20176','SCOTTISH TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20177','SEALYHAM TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20178','SHETLAND SHEEPDOG');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20179','SHIBA INU');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20180','SHIH TZU');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20181','SHILOH SHEPHERD');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20182','SIBERIAN HUSKY');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20183','SILKY TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20184','SKYE TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20185','SLOUGHI');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20186','SMOOTH FOX TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20187','SOFT COATED WHEATEN TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20188','SPINONE ITALIANO');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20189','STAFFORDSHIRE BULL TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20190','STANDARD POODLE');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20191','STANDARD SCHNAUZER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20192','SUSSEX SPANIEL');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20193','SWEDISH VALLHUND');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20194','TEXAS HEELER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20195','TIBETAN KYAPSO');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20196','TIBETAN MASTIFF');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20197','TIBETAN SPANIEL');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20198','TIBETAN TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20199','TOSA');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20200','TOY FOX TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20201','TOY MANCHESTER TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20202','TOY POODLE');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20203','TREEING FEIST');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20204','TREEING WALKER COONHOUND');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20205','VIZSLA');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20206','WEIMARANER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20207','WELSH SHEEPDOG');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20208','WELSH SPRINGER SPANIEL');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20209','WELSH TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20210','WEST HIGHLAND WHITE TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20211','WHIPPET');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20212','WHITE SHEPHERD');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20213','WIRE FOX TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20214','XOLOITZCUINTLI');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20215','YORKSHIRE TERRIER');
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20216','YUGOSLAVIAN TRICOLOR HOUND');
REM INSERTING into P_DOG_BREED_PERCENTAGE
Insert into P_DOG_BREED_PERCENTAGE (DOG_ID,BREED_ID,PERCENT) values ('10001','20128',50);
Insert into P_DOG_BREED_PERCENTAGE (DOG_ID,BREED_ID,PERCENT) values ('10001','20011',25);
Insert into P_DOG_BREED_PERCENTAGE (DOG_ID,BREED_ID,PERCENT) values ('10001','20100',25);
Insert into P_DOG_BREED_PERCENTAGE (DOG_ID,BREED_ID,PERCENT) values ('10002','20104',50);
Insert into P_DOG_BREED_PERCENTAGE (DOG_ID,BREED_ID,PERCENT) values ('10002','20190',50);
Insert into P_DOG_BREED_PERCENTAGE (DOG_ID,BREED_ID,PERCENT) values ('10003','20128',100);
Insert into P_DOG_BREED_PERCENTAGE (DOG_ID,BREED_ID,PERCENT) values ('10004','20141',100);
Insert into P_DOG_BREED_PERCENTAGE (DOG_ID,BREED_ID,PERCENT) values ('10005','20090',100);
Insert into P_DOG_BREED_PERCENTAGE (DOG_ID,BREED_ID,PERCENT) values ('10006','20163',100);
Insert into P_DOG_BREED_PERCENTAGE (DOG_ID,BREED_ID,PERCENT) values ('10007','20166',50);
Insert into P_DOG_BREED_PERCENTAGE (DOG_ID,BREED_ID,PERCENT) values ('10007','20141',50);
Insert into P_DOG_BREED_PERCENTAGE (DOG_ID,BREED_ID,PERCENT) values ('10008','20137',75);
Insert into P_DOG_BREED_PERCENTAGE (DOG_ID,BREED_ID,PERCENT) values ('10008','20140',25);
Insert into P_DOG_BREED_PERCENTAGE (DOG_ID,BREED_ID,PERCENT) values ('10009','20151',100);
Insert into P_DOG_BREED_PERCENTAGE (DOG_ID,BREED_ID,PERCENT) values ('10009','20107',1);
Insert into P_DOG_BREED_PERCENTAGE (DOG_ID,BREED_ID,PERCENT) values ('10010','20001',100);
Insert into P_DOG_BREED_PERCENTAGE (DOG_ID,BREED_ID,PERCENT) values ('10011','20022',100);
Insert into P_DOG_BREED_PERCENTAGE (DOG_ID,BREED_ID,PERCENT) values ('10012','20079',50);
Insert into P_DOG_BREED_PERCENTAGE (DOG_ID,BREED_ID,PERCENT) values ('10012','20128',25);
Insert into P_DOG_BREED_PERCENTAGE (DOG_ID,BREED_ID,PERCENT) values ('10013','20022',100);
Insert into P_DOG_BREED_PERCENTAGE (DOG_ID,BREED_ID,PERCENT) values ('10014','20078',12.5);
Insert into P_DOG_BREED_PERCENTAGE (DOG_ID,BREED_ID,PERCENT) values ('10014','20113',12.5);
Insert into P_DOG_BREED_PERCENTAGE (DOG_ID,BREED_ID,PERCENT) values ('10014','20170',12.5);
Insert into P_DOG_BREED_PERCENTAGE (DOG_ID,BREED_ID,PERCENT) values ('10014','20174',12.5);
Insert into P_DOG_BREED_PERCENTAGE (DOG_ID,BREED_ID,PERCENT) values ('10014','20123',12.5);
Insert into P_DOG_BREED_PERCENTAGE (DOG_ID,BREED_ID,PERCENT) values ('10014','20125',12.5);
Insert into P_DOG_BREED_PERCENTAGE (DOG_ID,BREED_ID,PERCENT) values ('10014','20058',12.5);
Insert into P_DOG_BREED_PERCENTAGE (DOG_ID,BREED_ID,PERCENT) values ('10014','20061',12.5);
Insert into P_DOG_BREED_PERCENTAGE (DOG_ID,BREED_ID,PERCENT) values ('10015','20128',50);
Insert into P_DOG_BREED_PERCENTAGE (DOG_ID,BREED_ID,PERCENT) values ('10015','20141',50);
Insert into P_DOG_BREED_PERCENTAGE (DOG_ID,BREED_ID,PERCENT) values ('10016','20064',100);
REM INSERTING into P_INCIDENT
Insert into P_INCIDENT (DOG_ID,INCIDENT_NUM,INCIDENT_TYPE,DATE_OF_INCIDENT,HAS_MAJOR_HUMAN_INJURY,INC_DESCRIPTION) values ('10016',1,'BITES HUMAN',to_date('12-MAR-10','DD-MON-RR'),'Y','Bit mailcarrier - required surgical repair');
Insert into P_INCIDENT (DOG_ID,INCIDENT_NUM,INCIDENT_TYPE,DATE_OF_INCIDENT,HAS_MAJOR_HUMAN_INJURY,INC_DESCRIPTION) values ('10001',1,'BARKING',to_date('04-JUL-14','DD-MON-RR'),'N','Barking on owner''s property 9:30pm');
Insert into P_INCIDENT (DOG_ID,INCIDENT_NUM,INCIDENT_TYPE,DATE_OF_INCIDENT,HAS_MAJOR_HUMAN_INJURY,INC_DESCRIPTION) values ('10009',1,'BITES ANIMAL',to_date('05-JUN-12','DD-MON-RR'),'N','Dog fight');
Insert into P_INCIDENT (DOG_ID,INCIDENT_NUM,INCIDENT_TYPE,DATE_OF_INCIDENT,HAS_MAJOR_HUMAN_INJURY,INC_DESCRIPTION) values ('10016',2,'BITES ANIMAL',to_date('05-JUN-12','DD-MON-RR'),'N','Dog fight');
Insert into P_INCIDENT (DOG_ID,INCIDENT_NUM,INCIDENT_TYPE,DATE_OF_INCIDENT,HAS_MAJOR_HUMAN_INJURY,INC_DESCRIPTION) values ('10016',3,'BITES HUMAN',to_date('05-JUN-12','DD-MON-RR'),'Y','Bit amimal control officer - caused severe lacerations requiring treatment');
Insert into P_INCIDENT (DOG_ID,INCIDENT_NUM,INCIDENT_TYPE,DATE_OF_INCIDENT,HAS_MAJOR_HUMAN_INJURY,INC_DESCRIPTION) values ('10007',1,'DISTURBING LIVESTOCK',to_date('23-AUG-12','DD-MON-RR'),'N','Chasing neighbor''s chickens.  Did not catch any.');
Insert into P_INCIDENT (DOG_ID,INCIDENT_NUM,INCIDENT_TYPE,DATE_OF_INCIDENT,HAS_MAJOR_HUMAN_INJURY,INC_DESCRIPTION) values ('10007',2,'TRASH ENCROACHMENT',to_date('08-SEP-13','DD-MON-RR'),'N','Dumped over trash cans in neighborhood');
Insert into P_INCIDENT (DOG_ID,INCIDENT_NUM,INCIDENT_TYPE,DATE_OF_INCIDENT,HAS_MAJOR_HUMAN_INJURY,INC_DESCRIPTION) values ('10007',3,'BARKING',to_date('07-FEB-12','DD-MON-RR'),'N','Barking for four continuous hours - reported by neighbor');
Insert into P_INCIDENT (DOG_ID,INCIDENT_NUM,INCIDENT_TYPE,DATE_OF_INCIDENT,HAS_MAJOR_HUMAN_INJURY,INC_DESCRIPTION) values ('10016',4,'BITES ANIMAL',to_date('15-NOV-12','DD-MON-RR'),'N','Attacked neighbor''s Great Dane');
Insert into P_INCIDENT (DOG_ID,INCIDENT_NUM,INCIDENT_TYPE,DATE_OF_INCIDENT,HAS_MAJOR_HUMAN_INJURY,INC_DESCRIPTION) values ('10016',5,'BITES HUMAN',to_date('30-NOV-12','DD-MON-RR'),'Y','Broke through fence and bit pedestrian, stitches required');
Insert into P_INCIDENT (DOG_ID,INCIDENT_NUM,INCIDENT_TYPE,DATE_OF_INCIDENT,HAS_MAJOR_HUMAN_INJURY,INC_DESCRIPTION) values ('10016',6,'BITES HUMAN',to_date('30-NOV-12','DD-MON-RR'),'N','After attacking pedestrian, bit owner on hand - refused medical treatment');
Insert into P_INCIDENT (DOG_ID,INCIDENT_NUM,INCIDENT_TYPE,DATE_OF_INCIDENT,HAS_MAJOR_HUMAN_INJURY,INC_DESCRIPTION) values ('10009',2,'BITES HUMAN',to_date('19-APR-14','DD-MON-RR'),'Y','Bit dog groomer, antibiotics required');
REM INSERTING into P_OWNER
Insert into P_OWNER (OWNER_ID,OWNER_FNAME,OWNER_LNAME,STREETADDRESS1,STREETADDRESS2,CITY,STATE,ZIP,TIMESTAMP,PHONE,EMAIL) values ('30001','Alan','Barry','10 Elm Drive',null,'LARKSVILLE','PA','18704',to_timestamp('05-JUL-14 11.29.10.000000000 AM','DD-MON-RR HH.MI.SS.FF AM'),'5705559631','abarry@someplace.com');
Insert into P_OWNER (OWNER_ID,OWNER_FNAME,OWNER_LNAME,STREETADDRESS1,STREETADDRESS2,CITY,STATE,ZIP,TIMESTAMP,PHONE,EMAIL) values ('30002','Kristin','Barry','10 Elm Drive',null,'LARKSVILLE','PA','18704',to_timestamp('05-JUL-14 11.29.11.000000000 AM','DD-MON-RR HH.MI.SS.FF AM'),'5705559631','kbarry@someplace.com');
Insert into P_OWNER (OWNER_ID,OWNER_FNAME,OWNER_LNAME,STREETADDRESS1,STREETADDRESS2,CITY,STATE,ZIP,TIMESTAMP,PHONE,EMAIL) values ('30003','Billy','Barry','10 Elm Drive',null,'LARKSVILLE','PA','18704',to_timestamp('05-JUL-14 11.29.11.000000000 AM','DD-MON-RR HH.MI.SS.FF AM'),'5705559631','wbarry@someplace.com');
Insert into P_OWNER (OWNER_ID,OWNER_FNAME,OWNER_LNAME,STREETADDRESS1,STREETADDRESS2,CITY,STATE,ZIP,TIMESTAMP,PHONE,EMAIL) values ('30004','Lisa','Gallager','1215 Maple Street','Apt 2A','LARKSVILLE','PA','18708',to_timestamp('05-JUL-14 11.51.47.000000000 AM','DD-MON-RR HH.MI.SS.FF AM'),'5705554488','lg@gallager.com');
Insert into P_OWNER (OWNER_ID,OWNER_FNAME,OWNER_LNAME,STREETADDRESS1,STREETADDRESS2,CITY,STATE,ZIP,TIMESTAMP,PHONE,EMAIL) values ('30005','Linda','Smithson','1215 Maple Street','Apt 2A','LARKSVILLE','PA','18708',to_timestamp('05-JUL-14 11.51.49.000000000 AM','DD-MON-RR HH.MI.SS.FF AM'),'5705559632','landas@yahoo.com');
Insert into P_OWNER (OWNER_ID,OWNER_FNAME,OWNER_LNAME,STREETADDRESS1,STREETADDRESS2,CITY,STATE,ZIP,TIMESTAMP,PHONE,EMAIL) values ('30006','Mark','Kramer','1215 Maple Street','Apt 2A','LARKSVILLE','PA','18708',to_timestamp('05-JUL-14 11.51.50.000000000 AM','DD-MON-RR HH.MI.SS.FF AM'),'5705554287','kramer@seinfeld.com');
Insert into P_OWNER (OWNER_ID,OWNER_FNAME,OWNER_LNAME,STREETADDRESS1,STREETADDRESS2,CITY,STATE,ZIP,TIMESTAMP,PHONE,EMAIL) values ('30007','George','Grayson','159 Chestnet Court',null,'LARKSVILLE','PA','18704',to_timestamp('05-JUL-14 11.51.51.000000000 AM','DD-MON-RR HH.MI.SS.FF AM'),'5705556325','GG@TTI.COM');
Insert into P_OWNER (OWNER_ID,OWNER_FNAME,OWNER_LNAME,STREETADDRESS1,STREETADDRESS2,CITY,STATE,ZIP,TIMESTAMP,PHONE,EMAIL) values ('30008','Kelly','Jordon','1748 Willow Street',null,'LARKSVILLE','PA','18651',to_timestamp('05-JUL-14 11.51.53.000000000 AM','DD-MON-RR HH.MI.SS.FF AM'),'5705554897','kjordan@penn.edu');
Insert into P_OWNER (OWNER_ID,OWNER_FNAME,OWNER_LNAME,STREETADDRESS1,STREETADDRESS2,CITY,STATE,ZIP,TIMESTAMP,PHONE,EMAIL) values ('30009','Ward','Cleaver','667 Oak Road',null,'LARKSVILLE','PA','18704',to_timestamp('05-JUL-14 12.00.11.000000000 PM','DD-MON-RR HH.MI.SS.FF AM'),'5705551113','wcleaver@gmail.com');
Insert into P_OWNER (OWNER_ID,OWNER_FNAME,OWNER_LNAME,STREETADDRESS1,STREETADDRESS2,CITY,STATE,ZIP,TIMESTAMP,PHONE,EMAIL) values ('30010','June','Cleaver','667 Oak Road',null,'LARKSVILLE','PA','18704',to_timestamp('05-JUL-14 12.00.12.000000000 PM','DD-MON-RR HH.MI.SS.FF AM'),'5705551113','jcleaver@gmail.com');
Insert into P_OWNER (OWNER_ID,OWNER_FNAME,OWNER_LNAME,STREETADDRESS1,STREETADDRESS2,CITY,STATE,ZIP,TIMESTAMP,PHONE,EMAIL) values ('30011','Theodore','Cleaver','667 Oak Road',null,'LARKSVILLE','PA','18704',to_timestamp('05-JUL-14 12.00.13.000000000 PM','DD-MON-RR HH.MI.SS.FF AM'),'5705551113','TheBeav@gmail.com');
Insert into P_OWNER (OWNER_ID,OWNER_FNAME,OWNER_LNAME,STREETADDRESS1,STREETADDRESS2,CITY,STATE,ZIP,TIMESTAMP,PHONE,EMAIL) values ('30012','Wallace','Cleaver','667 Oak Road',null,'LARKSVILLE','PA','18704',to_timestamp('05-JUL-14 12.02.06.000000000 PM','DD-MON-RR HH.MI.SS.FF AM'),'5705551113','Wcleaver1@gmail.com');
Insert into P_OWNER (OWNER_ID,OWNER_FNAME,OWNER_LNAME,STREETADDRESS1,STREETADDRESS2,CITY,STATE,ZIP,TIMESTAMP,PHONE,EMAIL) values ('30013','Marie','Curie','1215 Maple Street','Apt 3C','LARKSVILLE','PA','18708',to_timestamp('05-JUL-14 12.20.27.000000000 PM','DD-MON-RR HH.MI.SS.FF AM'),'5704875555','radium@nuclear.com');
Insert into P_OWNER (OWNER_ID,OWNER_FNAME,OWNER_LNAME,STREETADDRESS1,STREETADDRESS2,CITY,STATE,ZIP,TIMESTAMP,PHONE,EMAIL) values ('30014','Thomas','Edison','1215 Maple Street','Apt 3D','LARKSVILLE','PA','18708',to_timestamp('05-JUL-14 12.20.28.000000000 PM','DD-MON-RR HH.MI.SS.FF AM'),'5705551937','lightbulb@ideas.com');
Insert into P_OWNER (OWNER_ID,OWNER_FNAME,OWNER_LNAME,STREETADDRESS1,STREETADDRESS2,CITY,STATE,ZIP,TIMESTAMP,PHONE,EMAIL) values ('30015','Sam','Sasquatch','158 Hickory Court',null,'LARKSVILLE','PA','18651',to_timestamp('05-JUL-14 12.20.28.000000000 PM','DD-MON-RR HH.MI.SS.FF AM'),'5705559647','bigfoot@crackpot.com');
Insert into P_OWNER (OWNER_ID,OWNER_FNAME,OWNER_LNAME,STREETADDRESS1,STREETADDRESS2,CITY,STATE,ZIP,TIMESTAMP,PHONE,EMAIL) values ('30016','Lucy','Lockness','158 Hickory Court',null,'LARKSVILLE','PA','18651',to_timestamp('05-JUL-14 12.20.29.000000000 PM','DD-MON-RR HH.MI.SS.FF AM'),'5705551486','nessie@lakemonster.org');
Insert into P_OWNER (OWNER_ID,OWNER_FNAME,OWNER_LNAME,STREETADDRESS1,STREETADDRESS2,CITY,STATE,ZIP,TIMESTAMP,PHONE,EMAIL) values ('30017','Charlie','Chupacabra','1487 Magnolia Blvd.',null,'LARKSVILLE','PA','18704',to_timestamp('05-JUL-14 12.20.29.000000000 PM','DD-MON-RR HH.MI.SS.FF AM'),'5705556669','goatsucker@cryptid.com');
REM INSERTING into P_OWNER_DOG_INT
Insert into P_OWNER_DOG_INT (OWNER_ID,DOG_ID) values ('30001','10001');
Insert into P_OWNER_DOG_INT (OWNER_ID,DOG_ID) values ('30002','10001');
Insert into P_OWNER_DOG_INT (OWNER_ID,DOG_ID) values ('30003','10001');
Insert into P_OWNER_DOG_INT (OWNER_ID,DOG_ID) values ('30004','10002');
Insert into P_OWNER_DOG_INT (OWNER_ID,DOG_ID) values ('30005','10002');
Insert into P_OWNER_DOG_INT (OWNER_ID,DOG_ID) values ('30006','10003');
Insert into P_OWNER_DOG_INT (OWNER_ID,DOG_ID) values ('30007','10004');
Insert into P_OWNER_DOG_INT (OWNER_ID,DOG_ID) values ('30008','10005');
Insert into P_OWNER_DOG_INT (OWNER_ID,DOG_ID) values ('30009','10006');
Insert into P_OWNER_DOG_INT (OWNER_ID,DOG_ID) values ('30009','10007');
Insert into P_OWNER_DOG_INT (OWNER_ID,DOG_ID) values ('30009','10008');
Insert into P_OWNER_DOG_INT (OWNER_ID,DOG_ID) values ('30010','10006');
Insert into P_OWNER_DOG_INT (OWNER_ID,DOG_ID) values ('30010','10007');
Insert into P_OWNER_DOG_INT (OWNER_ID,DOG_ID) values ('30010','10008');
Insert into P_OWNER_DOG_INT (OWNER_ID,DOG_ID) values ('30011','10006');
Insert into P_OWNER_DOG_INT (OWNER_ID,DOG_ID) values ('30011','10007');
Insert into P_OWNER_DOG_INT (OWNER_ID,DOG_ID) values ('30011','10008');
Insert into P_OWNER_DOG_INT (OWNER_ID,DOG_ID) values ('30012','10006');
Insert into P_OWNER_DOG_INT (OWNER_ID,DOG_ID) values ('30012','10007');
Insert into P_OWNER_DOG_INT (OWNER_ID,DOG_ID) values ('30012','10008');
Insert into P_OWNER_DOG_INT (OWNER_ID,DOG_ID) values ('30013','10009');
Insert into P_OWNER_DOG_INT (OWNER_ID,DOG_ID) values ('30014','10010');
Insert into P_OWNER_DOG_INT (OWNER_ID,DOG_ID) values ('30014','10013');
Insert into P_OWNER_DOG_INT (OWNER_ID,DOG_ID) values ('30014','10014');
Insert into P_OWNER_DOG_INT (OWNER_ID,DOG_ID) values ('30014','10015');
Insert into P_OWNER_DOG_INT (OWNER_ID,DOG_ID) values ('30015','10011');
Insert into P_OWNER_DOG_INT (OWNER_ID,DOG_ID) values ('30016','10012');
Insert into P_OWNER_DOG_INT (OWNER_ID,DOG_ID) values ('30017','10016');
REM INSERTING into P_PET
Insert into P_PET (DOG_ID,PET_DOG_LICENSE_NUM,DATE_OF_LAST_PAYMENT,TOTAL_FEES_CURRENT_YEAR,TOTAL_PAYMENTS_CURRENT_YEAR,BALANCE_DUE_CURRENT_YEAR) values ('10001','LPD13501  ',to_date('05-JAN-14','DD-MON-RR'),30,15,15);
Insert into P_PET (DOG_ID,PET_DOG_LICENSE_NUM,DATE_OF_LAST_PAYMENT,TOTAL_FEES_CURRENT_YEAR,TOTAL_PAYMENTS_CURRENT_YEAR,BALANCE_DUE_CURRENT_YEAR) values ('10002','LPD13502  ',to_date('01-JUN-11','DD-MON-RR'),30,0,30);
Insert into P_PET (DOG_ID,PET_DOG_LICENSE_NUM,DATE_OF_LAST_PAYMENT,TOTAL_FEES_CURRENT_YEAR,TOTAL_PAYMENTS_CURRENT_YEAR,BALANCE_DUE_CURRENT_YEAR) values ('10004','LPD13503  ',to_date('13-FEB-14','DD-MON-RR'),30,30,0);
Insert into P_PET (DOG_ID,PET_DOG_LICENSE_NUM,DATE_OF_LAST_PAYMENT,TOTAL_FEES_CURRENT_YEAR,TOTAL_PAYMENTS_CURRENT_YEAR,BALANCE_DUE_CURRENT_YEAR) values ('10005','LPD13504  ',to_date('10-MAR-14','DD-MON-RR'),30,30,0);
Insert into P_PET (DOG_ID,PET_DOG_LICENSE_NUM,DATE_OF_LAST_PAYMENT,TOTAL_FEES_CURRENT_YEAR,TOTAL_PAYMENTS_CURRENT_YEAR,BALANCE_DUE_CURRENT_YEAR) values ('10006','LPD13505  ',to_date('30-APR-14','DD-MON-RR'),30,0,30);
Insert into P_PET (DOG_ID,PET_DOG_LICENSE_NUM,DATE_OF_LAST_PAYMENT,TOTAL_FEES_CURRENT_YEAR,TOTAL_PAYMENTS_CURRENT_YEAR,BALANCE_DUE_CURRENT_YEAR) values ('10008','LPD13506  ',to_date('07-JAN-14','DD-MON-RR'),30,0,30);
Insert into P_PET (DOG_ID,PET_DOG_LICENSE_NUM,DATE_OF_LAST_PAYMENT,TOTAL_FEES_CURRENT_YEAR,TOTAL_PAYMENTS_CURRENT_YEAR,BALANCE_DUE_CURRENT_YEAR) values ('10009','LPD13507  ',to_date('09-JAN-14','DD-MON-RR'),30,12,18);
Insert into P_PET (DOG_ID,PET_DOG_LICENSE_NUM,DATE_OF_LAST_PAYMENT,TOTAL_FEES_CURRENT_YEAR,TOTAL_PAYMENTS_CURRENT_YEAR,BALANCE_DUE_CURRENT_YEAR) values ('10010','LPD13508  ',to_date('15-JAN-14','DD-MON-RR'),30,30,0);
Insert into P_PET (DOG_ID,PET_DOG_LICENSE_NUM,DATE_OF_LAST_PAYMENT,TOTAL_FEES_CURRENT_YEAR,TOTAL_PAYMENTS_CURRENT_YEAR,BALANCE_DUE_CURRENT_YEAR) values ('10011','LPD13509  ',to_date('12-JAN-14','DD-MON-RR'),30,5,25);
Insert into P_PET (DOG_ID,PET_DOG_LICENSE_NUM,DATE_OF_LAST_PAYMENT,TOTAL_FEES_CURRENT_YEAR,TOTAL_PAYMENTS_CURRENT_YEAR,BALANCE_DUE_CURRENT_YEAR) values ('10012','LPD13510  ',to_date('18-JAN-14','DD-MON-RR'),30,30,0);
Insert into P_PET (DOG_ID,PET_DOG_LICENSE_NUM,DATE_OF_LAST_PAYMENT,TOTAL_FEES_CURRENT_YEAR,TOTAL_PAYMENTS_CURRENT_YEAR,BALANCE_DUE_CURRENT_YEAR) values ('10013','LPD13511  ',to_date('12-JAN-14','DD-MON-RR'),30,30,0);
Insert into P_PET (DOG_ID,PET_DOG_LICENSE_NUM,DATE_OF_LAST_PAYMENT,TOTAL_FEES_CURRENT_YEAR,TOTAL_PAYMENTS_CURRENT_YEAR,BALANCE_DUE_CURRENT_YEAR) values ('10014','LPD13512  ',to_date('05-JUL-14','DD-MON-RR'),30,0,30);
Insert into P_PET (DOG_ID,PET_DOG_LICENSE_NUM,DATE_OF_LAST_PAYMENT,TOTAL_FEES_CURRENT_YEAR,TOTAL_PAYMENTS_CURRENT_YEAR,BALANCE_DUE_CURRENT_YEAR) values ('10015','LPD13513  ',to_date('01-JUL-14','DD-MON-RR'),30,30,0);
Insert into P_PET (DOG_ID,PET_DOG_LICENSE_NUM,DATE_OF_LAST_PAYMENT,TOTAL_FEES_CURRENT_YEAR,TOTAL_PAYMENTS_CURRENT_YEAR,BALANCE_DUE_CURRENT_YEAR) values ('10016','LPD13514  ',to_date('03-JAN-14','DD-MON-RR'),150,30,120);
REM INSERTING into P_PHOTO
Insert into P_PHOTO (PHOTO_ID,PHOTO_FILENAME,PHOTO_TIMESTAMP,DOG_ID) values ('50001','2014rft.jpg',to_timestamp('01-JUL-14 12.41.28.000000000 PM','DD-MON-RR HH.MI.SS.FF AM'),'10001');
Insert into P_PHOTO (PHOTO_ID,PHOTO_FILENAME,PHOTO_TIMESTAMP,DOG_ID) values ('50003','2014asdf.JPG',to_timestamp('05-JUL-14 11.41.29.000000000 PM','DD-MON-RR HH.MI.SS.FF AM'),'10002');
Insert into P_PHOTO (PHOTO_ID,PHOTO_FILENAME,PHOTO_TIMESTAMP,DOG_ID) values ('50006','2014poER.jPg',to_timestamp('01-JUL-14 12.41.29.000000000 PM','DD-MON-RR HH.MI.SS.FF AM'),'10003');
Insert into P_PHOTO (PHOTO_ID,PHOTO_FILENAME,PHOTO_TIMESTAMP,DOG_ID) values ('50009','2013klop.jpg',to_timestamp('05-JUL-13 12.41.29.000000000 PM','DD-MON-RR HH.MI.SS.FF AM'),'10004');
Insert into P_PHOTO (PHOTO_ID,PHOTO_FILENAME,PHOTO_TIMESTAMP,DOG_ID) values ('50010','2014gg45.jpg',to_timestamp('05-JUL-14 12.41.30.000000000 PM','DD-MON-RR HH.MI.SS.FF AM'),'10005');
Insert into P_PHOTO (PHOTO_ID,PHOTO_FILENAME,PHOTO_TIMESTAMP,DOG_ID) values ('50005','2013iuws8.JPG',to_timestamp('05-JUN-13 02.41.30.000000000 PM','DD-MON-RR HH.MI.SS.FF AM'),'10006');
Insert into P_PHOTO (PHOTO_ID,PHOTO_FILENAME,PHOTO_TIMESTAMP,DOG_ID) values ('50012','2014r5t6.jpg',to_timestamp('05-JUL-14 12.41.30.000000000 PM','DD-MON-RR HH.MI.SS.FF AM'),'10007');
Insert into P_PHOTO (PHOTO_ID,PHOTO_FILENAME,PHOTO_TIMESTAMP,DOG_ID) values ('50007','2014ffff.JPG',to_timestamp('05-APR-14 12.41.30.000000000 PM','DD-MON-RR HH.MI.SS.FF AM'),'10008');
Insert into P_PHOTO (PHOTO_ID,PHOTO_FILENAME,PHOTO_TIMESTAMP,DOG_ID) values ('50014','NOIMAGE.JPG',to_timestamp('05-JUL-14 12.41.31.000000000 PM','DD-MON-RR HH.MI.SS.FF AM'),'10009');
Insert into P_PHOTO (PHOTO_ID,PHOTO_FILENAME,PHOTO_TIMESTAMP,DOG_ID) values ('50002','2013keee.jpg',to_timestamp('05-JUL-13 09.41.31.000000000 PM','DD-MON-RR HH.MI.SS.FF AM'),'10010');
Insert into P_PHOTO (PHOTO_ID,PHOTO_FILENAME,PHOTO_TIMESTAMP,DOG_ID) values ('50015','2014loju.JPG',to_timestamp('05-FEB-14 12.44.31.000000000 PM','DD-MON-RR HH.MI.SS.FF AM'),'10011');
Insert into P_PHOTO (PHOTO_ID,PHOTO_FILENAME,PHOTO_TIMESTAMP,DOG_ID) values ('50016','2013sssa.jpg',to_timestamp('05-DEC-13 12.41.31.000000000 PM','DD-MON-RR HH.MI.SS.FF AM'),'10012');
Insert into P_PHOTO (PHOTO_ID,PHOTO_FILENAME,PHOTO_TIMESTAMP,DOG_ID) values ('50011','2014rty.Jpg',to_timestamp('05-JUL-14 12.41.32.000000000 PM','DD-MON-RR HH.MI.SS.FF AM'),'10013');
Insert into P_PHOTO (PHOTO_ID,PHOTO_FILENAME,PHOTO_TIMESTAMP,DOG_ID) values ('50013','2014ght6.jpg',to_timestamp('05-JUL-14 12.21.32.000000000 PM','DD-MON-RR HH.MI.SS.FF AM'),'10014');
Insert into P_PHOTO (PHOTO_ID,PHOTO_FILENAME,PHOTO_TIMESTAMP,DOG_ID) values ('50008','2014ro876.jpg',to_timestamp('05-JUL-14 12.41.32.000000000 PM','DD-MON-RR HH.MI.SS.FF AM'),'10015');
Insert into P_PHOTO (PHOTO_ID,PHOTO_FILENAME,PHOTO_TIMESTAMP,DOG_ID) values ('50004','2013ERD.JPG',to_timestamp('05-OCT-13 12.41.33.000000000 PM','DD-MON-RR HH.MI.SS.FF AM'),'10016');
Insert into P_PHOTO (PHOTO_ID,PHOTO_FILENAME,PHOTO_TIMESTAMP,DOG_ID) values ('50017','2014ewq.jpg',to_timestamp('05-JUL-14 12.48.15.000000000 PM','DD-MON-RR HH.MI.SS.FF AM'),'10001');
Insert into P_PHOTO (PHOTO_ID,PHOTO_FILENAME,PHOTO_TIMESTAMP,DOG_ID) values ('50018','2014tghy.jpg',to_timestamp('05-JUL-14 12.49.00.000000000 PM','DD-MON-RR HH.MI.SS.FF AM'),'10007');
REM INSERTING into P_SERVICE_DOGS
Insert into P_SERVICE_DOGS (DOG_ID,SERVICE_DOG_LICENSE_NUM,OWNER_ID_ASSIGNED) values ('10003','US345123098','30006');
Insert into P_SERVICE_DOGS (DOG_ID,SERVICE_DOG_LICENSE_NUM,OWNER_ID_ASSIGNED) values ('10007','US321987459','30012');
REM INSERTING into P_SERVICE_CERTIFICATIONS
Insert into P_SERVICE_CERTIFICATIONS (CERT_ID,CERTIFICATION,ORIGINATION_DATE,MOST_RECENT_RENEWAL_DATE,CERT_EXPIRATION_DATE,DOG_ID) values ('60001','Seeing Eye',to_date('06-JUN-02','DD-MON-RR'),to_date('06-JUN-12','DD-MON-RR'),to_date('05-JUN-15','DD-MON-RR'),'10003');
Insert into P_SERVICE_CERTIFICATIONS (CERT_ID,CERTIFICATION,ORIGINATION_DATE,MOST_RECENT_RENEWAL_DATE,CERT_EXPIRATION_DATE,DOG_ID) values ('60002','Diabetic',to_date('12-DEC-07','DD-MON-RR'),to_date('14-NOV-13','DD-MON-RR'),to_date('13-NOV-16','DD-MON-RR'),'10007');
Insert into P_SERVICE_CERTIFICATIONS (CERT_ID,CERTIFICATION,ORIGINATION_DATE,MOST_RECENT_RENEWAL_DATE,CERT_EXPIRATION_DATE,DOG_ID) values ('60003','Hearing',to_date('18-NOV-05','DD-MON-RR'),to_date('06-JUN-12','DD-MON-RR'),to_date('05-JUN-15','DD-MON-RR'),'10003');
COMMIT;

create or replace NONEDITIONABLE PROCEDURE "P_EVALUATESTRUCTURE" 
			
	
AS 
      VARROWCOUNT				INT;
      IncorrectCount    INT;
      VARDATE           DATE;
      VARSTRING         STRING(20);
      VARNUMBER         NUMBER(5,2);

BEGIN
  INCORRECTCOUNT := 0;
  --first commit all uncommitted work so it is not unintentionally rolled back
  COMMIT;

DBMS_OUTPUT.PUT_LINE('   ');
DBMS_OUTPUT.PUT_LINE('----------CHECKING EXISTENCE OF TABLES AND RECORDS----------');

  -- CHECK TABLE P_DOG
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_DOG
	;
	-- IF varRowCount =16 THEN CORRECT.
		BEGIN
			DBMS_OUTPUT.PUT_LINE('Table P_DOG exists.');
			DBMS_OUTPUT.PUT_LINE('Table P_DOG has '||VARROWCOUNT||' records (should have 16).');
		END;
  IF (VARROWCOUNT <> 16) THEN 
    INCORRECTCOUNT := INCORRECTCOUNT + 1;
    DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
  END IF;

	 -- CHECK TABLE P_DOG_BREED_PERCENTAGE
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_DOG_BREED_PERCENTAGE
	;
	-- IF varRowCount = 31 THEN CORRECT.
		BEGIN
			DBMS_OUTPUT.PUT_LINE('Table P_DOG_BREED_PERCENTAGE exists.');
			DBMS_OUTPUT.PUT_LINE('Table P_DOG_BREED_PERCENTAGE has '||VARROWCOUNT||' records (should have 31).');
		END;
  IF (VARROWCOUNT <> 31) THEN 
    INCORRECTCOUNT := INCORRECTCOUNT + 1;
    DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
  END IF;

 -- CHECK TABLE P_DOGBREED
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_DOGBREED
	;
	-- IF varRowCount = 216 THEN CORRECT.
		BEGIN
			DBMS_OUTPUT.PUT_LINE('Table P_DOGBREED exists.');
			DBMS_OUTPUT.PUT_LINE('Table P_DOGBREED has '||VARROWCOUNT||' records (should have 216).');
		END;
  IF (VARROWCOUNT <> 216) THEN 
    INCORRECTCOUNT := INCORRECTCOUNT + 1;
    DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
  END IF;
 -- CHECK TABLE P_INCIDENT
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_INCIDENT
	;
	-- IF varRowCount =12 THEN CORRECT.
		BEGIN
			DBMS_OUTPUT.PUT_LINE('Table P_INCIDENT exists.');
			DBMS_OUTPUT.PUT_LINE('Table P_INCIDENT has '||VARROWCOUNT||' records (should have 12).');
		END;
  IF (VARROWCOUNT <> 12) THEN 
    INCORRECTCOUNT := INCORRECTCOUNT + 1;
    DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
  END IF;

 -- CHECK TABLE P_OWNER
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_OWNER
	;
	-- IF varRowCount = 17 THEN CORRECT.
		BEGIN
			DBMS_OUTPUT.PUT_LINE('Table P_OWNER exists.');
			DBMS_OUTPUT.PUT_LINE('Table P_OWNER has '||VARROWCOUNT||' records (should have 17).');
		END;
	IF (VARROWCOUNT <> 17) THEN 
    INCORRECTCOUNT := INCORRECTCOUNT + 1;
    DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
  END IF;

 -- CHECK TABLE P_OWNER_DOG_INT
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_OWNER_DOG_INT
	;
	-- IF varRowCount = 28 THEN CORRECT.
		BEGIN
			DBMS_OUTPUT.PUT_LINE('Table P_OWNER_DOG_INT exists.');
			DBMS_OUTPUT.PUT_LINE('Table P_OWNER_DOG_INT has '||VARROWCOUNT||' records (should have 28).');
		END;
	IF (VARROWCOUNT <> 28) THEN 
    INCORRECTCOUNT := INCORRECTCOUNT + 1;
    DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
  END IF;
 -- CHECK TABLE P_PET
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_PET
	;
	-- IF varRowCount = 14 THEN CORRECT.
		BEGIN
			DBMS_OUTPUT.PUT_LINE('Table P_PET exists.');
			DBMS_OUTPUT.PUT_LINE('Table P_PET has '||VARROWCOUNT||' records (should have 14).');
		END;
	IF (VARROWCOUNT <> 14) THEN 
    INCORRECTCOUNT := INCORRECTCOUNT + 1;
    DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
  END IF;
 -- CHECK TABLE P_PHOTO
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_PHOTO
	;
	-- IF varRowCount = 18 THEN CORRECT.
		BEGIN
			DBMS_OUTPUT.PUT_LINE('Table P_PHOTO exists.');
			DBMS_OUTPUT.PUT_LINE('Table P_PHOTO has '||VARROWCOUNT||' records (should have 18).');
		END;
	IF (VARROWCOUNT <> 18) THEN 
    INCORRECTCOUNT := INCORRECTCOUNT + 1;
    DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
  END IF;
 -- CHECK TABLE P_SERVICE_CERTIFICATIONS
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_SERVICE_CERTIFICATIONS
	;
	-- IF varRowCount = 3 THEN CORRECT.
		BEGIN
			DBMS_OUTPUT.PUT_LINE('Table P_SERVICE_CERTIFICATIONS exists.');
			DBMS_OUTPUT.PUT_LINE('Table P_SERVICE_CERTIFICATIONS has '||VARROWCOUNT||' records (should have 3).');
		END;
	IF (VARROWCOUNT <> 3) THEN 
    INCORRECTCOUNT := INCORRECTCOUNT + 1;
    DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
  END IF;
 -- CHECK TABLE P_SERVICE_DOGS
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_SERVICE_DOGS
	;
	-- IF varRowCount = 2 THEN CORRECT.
		BEGIN
			DBMS_OUTPUT.PUT_LINE('Table P_SERVICE_DOGS exists.');
			DBMS_OUTPUT.PUT_LINE('Table P_SERVICE_DOGS has '||VARROWCOUNT||' records (should have 2).');
		END;
	IF (VARROWCOUNT <> 2) THEN 
    INCORRECTCOUNT := INCORRECTCOUNT + 1;
    DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
  END IF;


DBMS_OUTPUT.PUT_LINE('   ');
DBMS_OUTPUT.PUT_LINE('----------CHECKING ATTRIBUTE AND PRIMARY KEY STRUCTURE----------');

BEGIN  
Insert into P_DOG (DOG_ID,DOG_NAME,DOG_BIRTH_MONTH,DOG_BIRTH_YEAR,SEX,SPAYED_OR_NEUTERED) values ('10101','Loki',3,2013,'M','Y');
DBMS_OUTPUT.PUT_LINE('P_DOG ACCEPTS APPROPRIATE INSERTS');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('P_DOG REJECTS APPROPRIATE INSERTS');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
END;
BEGIN 
SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_DOG
  WHERE DOG_ID = '10001'
	;
IF VARROWCOUNT = 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Primary Key Test Aborted - test record not found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
Insert into P_DOG (DOG_ID,DOG_NAME,DOG_BIRTH_MONTH,DOG_BIRTH_YEAR,SEX,SPAYED_OR_NEUTERED) values ('10001','Loki',3,2013,'M','Y');
DBMS_OUTPUT.PUT_LINE('P_DOG DOES NOT SEEM TO HAVE A PRIMARY KEY SPECIFIED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('P_DOG HAS A PRIMARY KEY SPECIFIED');
END;
END IF;
END;

BEGIN  
Insert into P_DOG_BREED_PERCENTAGE (DOG_ID,BREED_ID,PERCENT) values ('10001','20125',50);
DBMS_OUTPUT.PUT_LINE('P_DOG_BREED_PERCENTAGE ACCEPTS APPROPRIATE INSERTS');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('P_DOG_BREED_PERCENTAGE REJECTS APPROPRIATE INSERTS');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
END;
BEGIN  
SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_DOG_BREED_PERCENTAGE
  WHERE DOG_ID = '10001' AND BREED_ID = '20128' 
	;
IF VARROWCOUNT = 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Primary Key Test Aborted - test record not found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
Insert into P_DOG_BREED_PERCENTAGE (DOG_ID,BREED_ID,PERCENT) values ('10001','20128',50);
DBMS_OUTPUT.PUT_LINE('P_DOG_BREED_PERCENTAGE DOES NOT SEEM TO HAVE A PRIMARY KEY SPECIFIED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('P_DOG_BREED_PERCENTAGE HAS A PRIMARY KEY SPECIFIED');
END;
END IF;
END;

BEGIN  
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('21001','AFGHAN1 HOUND');
DBMS_OUTPUT.PUT_LINE('P_DOGBREED ACCEPTS APPROPRIATE INSERTS');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('P_DOGBREED REJECTS APPROPRIATE INSERTS');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
END;
BEGIN  
SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_DOGBREED
  WHERE BREED_ID = '20001' 
 	;
IF VARROWCOUNT = 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Primary Key Test Aborted - test record not found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
Insert into P_DOGBREED (BREED_ID,BREED_COMMON_NAME) values ('20001','AFGHAN1 HOUND');
DBMS_OUTPUT.PUT_LINE('P_DOGBREED DOES NOT SEEM TO HAVE A PRIMARY KEY SPECIFIED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('P_DOGBREED HAS A PRIMARY KEY SPECIFIED');
END;
END IF;
END;

BEGIN  
Insert into P_INCIDENT (DOG_ID,INCIDENT_NUM,INCIDENT_TYPE,DATE_OF_INCIDENT,HAS_MAJOR_HUMAN_INJURY,INC_DESCRIPTION) values ('10015',1,'BITES HUMAN',to_date('12-MAR-10','DD-MON-RR'),'Y','Bit mailcarrier - required surgical repair');
DBMS_OUTPUT.PUT_LINE('P_INCIDENT ACCEPTS APPROPRIATE INSERTS');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('P_INCIDENT REJECTS APPROPRIATE INSERTS');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
END;
BEGIN  
SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_INCIDENT
  WHERE DOG_ID = '10016'
  AND INCIDENT_NUM=1
	;
IF VARROWCOUNT = 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Primary Key Test Aborted - test record not found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
Insert into P_INCIDENT (DOG_ID,INCIDENT_NUM,INCIDENT_TYPE,DATE_OF_INCIDENT,HAS_MAJOR_HUMAN_INJURY,INC_DESCRIPTION) values ('10016',1,'BITES HUMAN',to_date('12-MAR-10','DD-MON-RR'),'Y','Bit mailcarrier - required surgical repair');
DBMS_OUTPUT.PUT_LINE('P_INCIDENT DOES NOT SEEM TO HAVE A PRIMARY KEY SPECIFIED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('P_INCIDENT HAS A PRIMARY KEY SPECIFIED');
END;
END IF;
END;

BEGIN  
Insert into P_OWNER (OWNER_ID,OWNER_FNAME,OWNER_LNAME,STREETADDRESS1,STREETADDRESS2,CITY,STATE,ZIP,TIMESTAMP,PHONE,EMAIL) values ('30101','Alan','BLarry','10 Elm Drive',null,'LARKSVILLE','PA','18704',to_timestamp('05-JUL-14 11.29.10.000000000 AM','DD-MON-RR HH.MI.SS.FF AM'),'5705559631','abarry@someplace.com');
DBMS_OUTPUT.PUT_LINE('P_OWNER ACCEPTS APPROPRIATE INSERTS');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('P_OWNER REJECTS APPROPRIATE INSERTS');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
END;
BEGIN  
SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_OWNER
  WHERE OWNER_ID = '30001'
	;
IF VARROWCOUNT = 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Primary Key Test Aborted - test record not found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
Insert into P_OWNER (OWNER_ID,OWNER_FNAME,OWNER_LNAME,STREETADDRESS1,STREETADDRESS2,CITY,STATE,ZIP,TIMESTAMP,PHONE,EMAIL) values ('30001','Alan','BLarry','10 Elm Drive',null,'LARKSVILLE','PA','18704',to_timestamp('05-JUL-14 11.29.10.000000000 AM','DD-MON-RR HH.MI.SS.FF AM'),'5705559631','abarry@someplace.com');
DBMS_OUTPUT.PUT_LINE('P_OWNER DOES NOT SEEM TO HAVE A PRIMARY KEY SPECIFIED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('P_OWNER HAS A PRIMARY KEY SPECIFIED');
END;
END IF;
END;

BEGIN  
Insert into P_OWNER_DOG_INT (OWNER_ID,DOG_ID) values ('30011','10001');
DBMS_OUTPUT.PUT_LINE('P_OWNER_DOG_INT ACCEPTS APPROPRIATE INSERTS');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('P_OWNER_DOG_INT REJECTS APPROPRIATE INSERTS');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
END;
BEGIN  
SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_OWNER_DOG_INT
  WHERE OWNER_ID = '30001'
  AND DOG_ID = '10001'
	;
IF VARROWCOUNT = 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Primary Key Test Aborted - test record not found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
Insert into P_OWNER_DOG_INT (OWNER_ID,DOG_ID) values ('30001','10001');
DBMS_OUTPUT.PUT_LINE('P_OWNER_DOG_INT DOES NOT SEEM TO HAVE A PRIMARY KEY SPECIFIED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('P_OWNER_DOG_INT HAS A PRIMARY KEY SPECIFIED');
END;
END IF;
END;

BEGIN  
Insert into P_PET (DOG_ID,PET_DOG_LICENSE_NUM,DATE_OF_LAST_PAYMENT,TOTAL_FEES_CURRENT_YEAR,TOTAL_PAYMENTS_CURRENT_YEAR,BALANCE_DUE_CURRENT_YEAR) values ('10007','LPG13501  ',to_date('05-JAN-14','DD-MON-RR'),30,15,15);
DBMS_OUTPUT.PUT_LINE('P_PET ACCEPTS APPROPRIATE INSERTS');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('P_PET REJECTS APPROPRIATE INSERTS');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
END;
BEGIN  
SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_PET
  WHERE DOG_ID = '10001'
	;
IF VARROWCOUNT = 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Primary Key Test Aborted - test record not found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
Insert into P_PET (DOG_ID,PET_DOG_LICENSE_NUM,DATE_OF_LAST_PAYMENT,TOTAL_FEES_CURRENT_YEAR,TOTAL_PAYMENTS_CURRENT_YEAR,BALANCE_DUE_CURRENT_YEAR) values ('10001','LPG13501  ',to_date('05-JAN-14','DD-MON-RR'),30,15,15);
DBMS_OUTPUT.PUT_LINE('P_PET DOES NOT SEEM TO HAVE A PRIMARY KEY SPECIFIED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('P_PET HAS A PRIMARY KEY SPECIFIED');
END;
END IF;
END;

BEGIN  
Insert into P_PHOTO (PHOTO_ID,PHOTO_FILENAME,PHOTO_TIMESTAMP,DOG_ID) values ('51001','2014rft.jpg',to_timestamp('01-JUL-14 12.41.28.000000000 PM','DD-MON-RR HH.MI.SS.FF AM'),'10001');
DBMS_OUTPUT.PUT_LINE('P_PHOTO ACCEPTS APPROPRIATE INSERTS');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('P_PHOTO REJECTS APPROPRIATE INSERTS');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
END;
BEGIN  
SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_PHOTO
  WHERE PHOTO_ID = '50001'
	;
IF VARROWCOUNT = 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Primary Key Test Aborted - test record not found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
Insert into P_PHOTO (PHOTO_ID,PHOTO_FILENAME,PHOTO_TIMESTAMP,DOG_ID) values ('50001','2014rft.jpg',to_timestamp('01-JUL-14 12.41.28.000000000 PM','DD-MON-RR HH.MI.SS.FF AM'),'10001');
DBMS_OUTPUT.PUT_LINE('P_PHOTO DOES NOT SEEM TO HAVE A PRIMARY KEY SPECIFIED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('P_PHOTO HAS A PRIMARY KEY SPECIFIED');
END;
END IF;
END;

BEGIN  
Insert into P_SERVICE_CERTIFICATIONS (CERT_ID,CERTIFICATION,ORIGINATION_DATE,MOST_RECENT_RENEWAL_DATE,CERT_EXPIRATION_DATE,DOG_ID) values ('61001','Seeing1 Eye',to_date('06-JUN-02','DD-MON-RR'),to_date('06-JUN-12','DD-MON-RR'),to_date('05-JUN-15','DD-MON-RR'),'10003');
DBMS_OUTPUT.PUT_LINE('P_SERVICE_CERTIFICATIONS ACCEPTS APPROPRIATE INSERTS');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('P_SERVICE_CERTIFICATIONS REJECTS APPROPRIATE INSERTS');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
END;
BEGIN  
SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_SERVICE_CERTIFICATIONS
  WHERE CERT_ID = '60001'
	;
IF VARROWCOUNT = 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Primary Key Test Aborted - test record not found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
Insert into P_SERVICE_CERTIFICATIONS (CERT_ID,CERTIFICATION,ORIGINATION_DATE,MOST_RECENT_RENEWAL_DATE,CERT_EXPIRATION_DATE,DOG_ID) values ('60001','Seeing11 Eye',to_date('06-JUN-02','DD-MON-RR'),to_date('06-JUN-12','DD-MON-RR'),to_date('05-JUN-15','DD-MON-RR'),'10003');
DBMS_OUTPUT.PUT_LINE('P_SERVICE_CERTIFICATIONS DOES NOT SEEM TO HAVE A PRIMARY KEY SPECIFIED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('P_SERVICE_CERTIFICATIONS HAS A PRIMARY KEY SPECIFIED');
END;
END IF;
END;

BEGIN  
Insert into P_SERVICE_DOGS (DOG_ID,SERVICE_DOG_LICENSE_NUM,OWNER_ID_ASSIGNED) values ('10001','US3451EEEE','30006');
DBMS_OUTPUT.PUT_LINE('P_SERVICE_DOGS ACCEPTS APPROPRIATE INSERTS');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('P_SERVICE_DOGS REJECTS APPROPRIATE INSERTS');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
END;
BEGIN  
SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_SERVICE_DOGS
  WHERE DOG_ID = '10003'
  ;
IF VARROWCOUNT = 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Primary Key Test Aborted - test record not found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
Insert into P_SERVICE_DOGS (DOG_ID,SERVICE_DOG_LICENSE_NUM,OWNER_ID_ASSIGNED) values ('10003','US3451EE098','30006');
DBMS_OUTPUT.PUT_LINE('P_SERVICE_DOGS DOES NOT SEEM TO HAVE A PRIMARY KEY SPECIFIED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('P_SERVICE_DOGS HAS A PRIMARY KEY SPECIFIED');
END;
END IF;
END;


--Check Foreign keys


BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('   ');
DBMS_OUTPUT.PUT_LINE('----------CHECKING FOREIGN KEYS----------');
DBMS_OUTPUT.PUT_LINE('CHECKING P_DOG_BREED_PERCENTAGE.BREED_ID references P_DOGBREED.BREED_ID...');
BEGIN
Insert into P_DOG_BREED_PERCENTAGE (DOG_ID,BREED_ID,PERCENT) values ('10001','20150',50);
EXCEPTION
WHEN OTHERS THEN
 ROLLBACK;
--DO NOTHING 
END;  
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_DOG_BREED_PERCENTAGE
  WHERE DOG_ID = '10001' AND BREED_ID = '20150'
	;
IF VARROWCOUNT = 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test record not found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
UPDATE P_DOG_BREED_PERCENTAGE SET BREED_ID = '32457' WHERE DOG_ID = '10001' AND BREED_ID = '20150';
DBMS_OUTPUT.PUT_LINE('    ....FAILED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....PASSED');
end;
end if;
END;


BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('CHECKING P_DOG_BREED_PERCENTAGE.DOG_ID references P_DOG.DOG_ID...');
BEGIN
Insert into P_DOG_BREED_PERCENTAGE (DOG_ID,BREED_ID,PERCENT) values ('10002','20150',50);
EXCEPTION
WHEN OTHERS THEN
 ROLLBACK;
--DO NOTHING 
END;  
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_DOG_BREED_PERCENTAGE
  WHERE DOG_ID = '10002' AND BREED_ID = '20150'
	;
IF VARROWCOUNT = 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test record not found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
UPDATE P_DOG_BREED_PERCENTAGE SET DOG_ID = '32457' WHERE DOG_ID = '10002' AND BREED_ID = '20150';
DBMS_OUTPUT.PUT_LINE('    ....FAILED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....PASSED');
end;
end if;
END;

BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('CHECKING P_OWNER_DOG_INT.OWNER_ID references P_OWNER.OWNER_ID...');
BEGIN
Insert into P_OWNER_DOG_INT (OWNER_ID,DOG_ID) values ('30009','10001');
EXCEPTION
WHEN OTHERS THEN
 ROLLBACK;
--DO NOTHING 
END;  
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_OWNER_DOG_INT
  WHERE OWNER_ID = '30009' AND DOG_ID = '10001'
	;
IF VARROWCOUNT = 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test record not found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
UPDATE P_OWNER_DOG_INT SET OWNER_ID = '32457' WHERE OWNER_ID = '30009' AND DOG_ID = '10001';
DBMS_OUTPUT.PUT_LINE('    ....FAILED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....PASSED');
end;
end if;
END;

BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('CHECKING P_OWNER_DOG_INT.DOG_ID references P_DOG.DOG_ID...');
BEGIN
Insert into P_OWNER_DOG_INT (OWNER_ID,DOG_ID) values ('30008','10001');
EXCEPTION
WHEN OTHERS THEN
 ROLLBACK;
--DO NOTHING 
END;  
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_OWNER_DOG_INT
  WHERE OWNER_ID = '30008' AND DOG_ID = '10001'
	;
IF VARROWCOUNT = 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test record not found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
UPDATE P_OWNER_DOG_INT SET DOG_ID = '32457' WHERE OWNER_ID = '30008' AND DOG_ID = '10001';
DBMS_OUTPUT.PUT_LINE('    ....FAILED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....PASSED');
end;
end if;
END;



BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('CHECKING P_INCIDENT.DOG_ID references P_DOG.DOG_ID...');
BEGIN
Insert into P_INCIDENT (DOG_ID,INCIDENT_NUM,INCIDENT_TYPE,DATE_OF_INCIDENT,HAS_MAJOR_HUMAN_INJURY,INC_DESCRIPTION) values ('10001',4,'BITES HUMAN',to_date('12-MAR-10','DD-MON-RR'),'Y','Bit');
EXCEPTION
WHEN OTHERS THEN
 ROLLBACK;
--DO NOTHING 
END;  
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_INCIDENT
  WHERE DOG_ID = '10001' AND INCIDENT_NUM = 4 
	;
IF VARROWCOUNT = 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test record not found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
UPDATE P_INCIDENT SET DOG_ID = '33333' WHERE DOG_ID = '10001' AND INCIDENT_NUM = 4;
DBMS_OUTPUT.PUT_LINE('    ....FAILED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....PASSED');
end;
END IF;
END;

BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('CHECKING P_PHOTO.DOG_ID references P_DOG.DOG_ID...');
BEGIN
Insert into P_PHOTO (PHOTO_ID,PHOTO_FILENAME,PHOTO_TIMESTAMP,DOG_ID) values ('51001','2014r1ft.jpg',to_timestamp('01-JUL-14 12.41.28.000000000 PM','DD-MON-RR HH.MI.SS.FF AM'),'10001');
EXCEPTION
WHEN OTHERS THEN
 ROLLBACK;
--DO NOTHING 
END;  
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_PHOTO
  WHERE PHOTO_ID = '51001' 
	;
IF VARROWCOUNT = 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test record not found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
UPDATE P_PHOTO SET DOG_ID = '33333' WHERE PHOTO_ID = '51001';
DBMS_OUTPUT.PUT_LINE('    ....FAILED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....PASSED');
end;
END IF;
END;

BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('CHECKING P_SERVICE_DOGS.DOG_ID references P_DOG.DOG_ID...');
BEGIN
Insert into P_SERVICE_DOGS (DOG_ID,SERVICE_DOG_LICENSE_NUM,OWNER_ID_ASSIGNED) values ('10001','US345EE3098','30001');
EXCEPTION
WHEN OTHERS THEN
 ROLLBACK;
--DO NOTHING 
END;  
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_SERVICE_DOGS
  WHERE DOG_ID = '10001' 
	;
IF VARROWCOUNT = 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test record not found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
UPDATE P_SERVICE_DOGS SET DOG_ID = '33333' WHERE DOG_ID = '10001';
DBMS_OUTPUT.PUT_LINE('    ....FAILED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....PASSED');
end;
END IF;
END;

BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('CHECKING P_SERVICE_DOGS.OWNER_ID_ASSIGNED references P_OWNER.OWNER_ID...');
BEGIN
Insert into P_SERVICE_DOGS (DOG_ID,SERVICE_DOG_LICENSE_NUM,OWNER_ID_ASSIGNED) values ('10001','US345ED3098','30001');
EXCEPTION
WHEN OTHERS THEN
 ROLLBACK;
--DO NOTHING 
END;  
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_SERVICE_DOGS
  WHERE DOG_ID = '10001' 
	;
IF VARROWCOUNT = 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test record not found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
UPDATE P_SERVICE_DOGS SET OWNER_ID_ASSIGNED = '33333' WHERE DOG_ID = '10001';
DBMS_OUTPUT.PUT_LINE('    ....FAILED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....PASSED');
end;
END IF;
END;

BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('CHECKING P_SERVICE_CERTIFICATIONS.DOG_ID references P_SERVICE_DOGS.DOG_ID...');
BEGIN
Insert into P_SERVICE_CERTIFICATIONS (CERT_ID,CERTIFICATION,ORIGINATION_DATE,MOST_RECENT_RENEWAL_DATE,CERT_EXPIRATION_DATE,DOG_ID) values ('61001','Seeing1 Eye',to_date('06-JUN-02','DD-MON-RR'),to_date('06-JUN-12','DD-MON-RR'),to_date('05-JUN-15','DD-MON-RR'),'10003');
EXCEPTION
WHEN OTHERS THEN
 ROLLBACK;
--DO NOTHING 
END;  
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_SERVICE_CERTIFICATIONS
  WHERE CERT_ID = '61001' 
	;
IF VARROWCOUNT = 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test record not found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
UPDATE P_SERVICE_CERTIFICATIONS SET DOG_ID = '10001' WHERE CERT_ID = '61001';
DBMS_OUTPUT.PUT_LINE('    ....FAILED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....PASSED');
end;
END IF;
END;

BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('CHECKING P_PET.DOG_ID references P_DOG.DOG_ID...');
BEGIN
Insert into P_PET (DOG_ID,PET_DOG_LICENSE_NUM,DATE_OF_LAST_PAYMENT,TOTAL_FEES_CURRENT_YEAR,TOTAL_PAYMENTS_CURRENT_YEAR,BALANCE_DUE_CURRENT_YEAR) values ('10003','LPDEE501  ',to_date('05-JAN-14','DD-MON-RR'),30,15,15);
EXCEPTION
WHEN OTHERS THEN
 ROLLBACK;
--DO NOTHING 
END;  
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_PET
  WHERE DOG_ID = '10003' 
	;
IF VARROWCOUNT = 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test record not found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
UPDATE P_PET SET DOG_ID = '33333' WHERE DOG_ID = '10003';
DBMS_OUTPUT.PUT_LINE('    ....FAILED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....PASSED');
end;
END IF;
END;


BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('   ');
DBMS_OUTPUT.PUT_LINE('----------CHECKING CHECK CONSTRAINTS----------');
DBMS_OUTPUT.PUT_LINE('CHECKING check constraint on P_DOG.DOG_BIRTH_MONTH...');
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_DOG
  WHERE DOG_ID = '10001' 
;
IF VARROWCOUNT = 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test record not found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
UPDATE P_DOG SET DOG_BIRTH_MONTH = 0 WHERE DOG_ID = '10001' 
;
DBMS_OUTPUT.PUT_LINE('    ....FAILED LOWER BOUND');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....PASSED LOWER BOUND');
END;
BEGIN
UPDATE P_DOG SET DOG_BIRTH_MONTH = 13 WHERE DOG_ID = '10001' 
;
DBMS_OUTPUT.PUT_LINE('    ....FAILED UPPER BOUND');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....PASSED UPPER BOUND');
end;
END IF;
END;

BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('CHECKING check constraint on P_DOG.DOG_BIRTH_YEAR...');
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_DOG
  WHERE DOG_ID = '10001' 
;
IF VARROWCOUNT = 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test record not found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
UPDATE P_DOG SET DOG_BIRTH_YEAR = 1979 WHERE DOG_ID = '10001' 
;
DBMS_OUTPUT.PUT_LINE('    ....FAILED LOWER BOUND');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....PASSED LOWER BOUND');
END;
BEGIN
UPDATE P_DOG SET DOG_BIRTH_YEAR = 2031 WHERE DOG_ID = '10001' 
;
DBMS_OUTPUT.PUT_LINE('    ....FAILED UPPER BOUND');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....PASSED UPPER BOUND');
end;
END IF;
END;

BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('CHECKING check constraint on P_DOG_BREED_PERCENTAGE.PERCENT...');
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_DOG_BREED_PERCENTAGE
  WHERE DOG_ID = '10001' AND BREED_ID = '20100'
;
IF VARROWCOUNT = 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test record not found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
UPDATE P_DOG_BREED_PERCENTAGE SET PERCENT = -1 WHERE DOG_ID = '10001' AND BREED_ID = '20100' 
;
DBMS_OUTPUT.PUT_LINE('    ....FAILED LOWER BOUND');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....PASSED LOWER BOUND');
END;
BEGIN
UPDATE P_DOG_BREED_PERCENTAGE SET PERCENT = 101 WHERE DOG_ID = '10001' AND BREED_ID = '20100'
;
DBMS_OUTPUT.PUT_LINE('    ....FAILED UPPER BOUND');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....PASSED UPPER BOUND');
end;
END IF;
END;



BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('CHECKING check constraint on P_INCIDENT.HAS_MAJOR_HUMAN_INJURY...');
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_INCIDENT
  WHERE DOG_ID = '10001' AND INCIDENT_NUM = 1
;
IF VARROWCOUNT = 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test record not found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
UPDATE P_INCIDENT SET HAS_MAJOR_HUMAN_INJURY = 'Z' WHERE DOG_ID = '10001' AND INCIDENT_NUM = 1;
DBMS_OUTPUT.PUT_LINE('    ....FAILED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....PASSED');
end;
END IF;
END;

BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('CHECKING check constraint on P_OWNER.ZIP...');
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_OWNER
  WHERE OWNER_ID = '30001'
;
IF VARROWCOUNT = 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test record not found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
UPDATE P_OWNER SET ZIP = '11111' WHERE OWNER_ID = '30001';
DBMS_OUTPUT.PUT_LINE('    ....FAILED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....PASSED');
end;
END IF;
END;

BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('CHECKING check constraint on P_OWNER.EMAIL...');
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_OWNER
  WHERE OWNER_ID = '30001'
;
IF VARROWCOUNT = 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test record not found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
UPDATE P_OWNER SET EMAIL = 'X@.X' WHERE OWNER_ID = '30001';
DBMS_OUTPUT.PUT_LINE('    ....FAILED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....PASSED');
end;
END IF;
END;

BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('CHECKING check constraint on P_PHOTO.PHOTO_FILENAME...');
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_PHOTO
  WHERE PHOTO_ID = '50001' 
;
IF VARROWCOUNT = 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test record not found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
UPDATE P_PHOTO SET PHOTO_FILENAME = 'EEE.jpx' WHERE PHOTO_ID = '50001'; 
DBMS_OUTPUT.PUT_LINE('    ....FAILED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....PASSED');
end;
END IF;
END;


BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('   ');
DBMS_OUTPUT.PUT_LINE('----------CHECKING UNIQUE CONSTRAINTS----------');
DBMS_OUTPUT.PUT_LINE('CHECKING UNIQUE CONSTRAINT FOR P_DOGBREED (BREED_COMMON_NAME)...');
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_DOGBREED
  WHERE BREED_ID = '20100' OR BREED_ID = '20101'
	;
IF VARROWCOUNT <> 2 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test records not found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
UPDATE P_DOGBREED SET BREED_COMMON_NAME = 'A' WHERE BREED_ID = '20100' OR BREED_ID = '20101';
DBMS_OUTPUT.PUT_LINE('    ....FAILED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....PASSED');
end;
END IF;
END;

BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('CHECKING UNIQUE CONSTRAINT FOR P_OWNER (OWNER_FNAME, OWNER_LNAME, STREETADDRESS1, STREETADDRESS2, ZIP)...');
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_OWNER
  WHERE OWNER_ID = '30001' OR OWNER_ID = '30002'
	;
IF VARROWCOUNT <> 2 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test records not found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
UPDATE P_OWNER SET OWNER_FNAME = 'A', OWNER_LNAME = 'A', STREETADDRESS1 = 'A', STREETADDRESS2 = 'A', ZIP = 'A' WHERE OWNER_ID = '30001' OR OWNER_ID = '30002';
DBMS_OUTPUT.PUT_LINE('    ....FAILED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....PASSED');
end;
END IF;
END;

BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('CHECKING UNIQUE CONSTRAINT FOR P_SERVICE_DOGS (SERVICE_DOG_LICENSE_NUM)...');
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_SERVICE_DOGS
  WHERE DOG_ID = '10003' OR DOG_ID = '10007'
	;
IF VARROWCOUNT <> 2 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test records not found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
UPDATE P_SERVICE_DOGS SET SERVICE_DOG_LICENSE_NUM = 'W' WHERE DOG_ID = '10003' OR DOG_ID = '10007';
DBMS_OUTPUT.PUT_LINE('    ....FAILED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....PASSED');
end;
END IF;
END;

BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('CHECKING UNIQUE CONSTRAINT FOR P_PET (PET_DOG_LICENSE_NUM)...');
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_PET
  WHERE DOG_ID = '10001' OR DOG_ID = '10002'
	;
IF VARROWCOUNT <> 2 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test records not found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
UPDATE P_PET SET PET_DOG_LICENSE_NUM = 'W' WHERE DOG_ID = '10001' OR DOG_ID = '10002';
DBMS_OUTPUT.PUT_LINE('    ....FAILED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....PASSED');
end;
END IF;
END;

BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('CHECKING UNIQUE CONSTRAINT FOR P_SERVICE_CERTIFICATIONS (CERTIFICATION, DOG_ID)...');
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_SERVICE_CERTIFICATIONS
  WHERE CERT_ID = '60001' OR CERT_ID = '60002'
	;
IF VARROWCOUNT <> 2 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test records not found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
UPDATE P_SERVICE_CERTIFICATIONS SET CERTIFICATION = 'X', DOG_ID = 'X' WHERE CERT_ID = '60001' OR CERT_ID = '60002';
DBMS_OUTPUT.PUT_LINE('    ....FAILED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....PASSED');
end;
END IF;
END;


BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('   ');
DBMS_OUTPUT.PUT_LINE('----------CHECKING DEFAULT VALUES----------');
DBMS_OUTPUT.PUT_LINE('CHECKING DEFAULT VALUE FOR P_DOG.DOG_NAME...');
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_DOG
  WHERE DOG_ID = '11111' 
;
IF VARROWCOUNT <> 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test record found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
Insert into P_DOG (DOG_ID,DOG_BIRTH_MONTH,DOG_BIRTH_YEAR,SEX,SPAYED_OR_NEUTERED) values ('11111',3,2013,'M','Y');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....NO DEFAULT SET');
END;
BEGIN
 BEGIN
  VARSTRING := 'EMPTY';
  SELECT	DOG_NAME INTO VARSTRING
  FROM		P_DOG
  WHERE DOG_ID = '11111' 
;
EXCEPTION 
WHEN OTHERS THEN
 DBMS_OUTPUT.PUT_LINE('    ....INSERTED DEFAULT VALUE NOT FOUND');
 END;
IF (VARSTRING <> 'UNKNOWN') OR VARSTRING = 'EMPTY' OR VARSTRING IS NULL THEN
DBMS_OUTPUT.PUT_LINE('    ....FAILED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
DBMS_OUTPUT.PUT_LINE('    ....PASSED');
END IF;
END;
END IF;
END;

BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('CHECKING DEFAULT VALUE FOR P_DOG.SPAYED_OR_NEUTERED...');
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_DOG
  WHERE DOG_ID = '11111' 
;
IF VARROWCOUNT <> 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test record found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
Insert into P_DOG (DOG_ID,DOG_NAME,DOG_BIRTH_MONTH,DOG_BIRTH_YEAR,SEX) values ('11111','LOKI',3,2013,'M');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....NO DEFAULT SET');
END;
BEGIN
 BEGIN
  VARSTRING := 'EMPTY';
  SELECT	SPAYED_OR_NEUTERED INTO VARSTRING
  FROM		P_DOG
  WHERE DOG_ID = '11111' 
;
EXCEPTION 
WHEN OTHERS THEN
 DBMS_OUTPUT.PUT_LINE('    ....INSERTED DEFAULT VALUE NOT FOUND');
 END;
IF (VARSTRING <> 'N') OR VARSTRING = 'EMPTY' OR VARSTRING IS NULL THEN
DBMS_OUTPUT.PUT_LINE('    ....FAILED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
DBMS_OUTPUT.PUT_LINE('    ....PASSED');
END IF;
END;
END IF;
END;



BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('CHECKING DEFAULT VALUE FOR P_DOG_BREED_PERCENTAGE.PERCENT...');
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_DOG_BREED_PERCENTAGE
  WHERE DOG_ID = '10001' AND BREED_ID = '20200'
;
IF VARROWCOUNT <> 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test record found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
Insert into P_DOG_BREED_PERCENTAGE (DOG_ID,BREED_ID) values ('10001','20200');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....NO DEFAULT SET');
END;
BEGIN
 BEGIN
  VARNUMBER := 12.34;
  SELECT	PERCENT INTO VARNUMBER
  FROM		P_DOG_BREED_PERCENTAGE
  WHERE DOG_ID = '10001' AND BREED_ID = '20200' 
;
EXCEPTION 
WHEN OTHERS THEN
 DBMS_OUTPUT.PUT_LINE('    ....INSERTED DEFAULT VALUE NOT FOUND');
 END;
IF (VARNUMBER <> 100.00) OR VARNUMBER = 12.34 OR VARNUMBER IS NULL THEN
DBMS_OUTPUT.PUT_LINE('    ....FAILED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
DBMS_OUTPUT.PUT_LINE('    ....PASSED');
END IF;
END;
END IF;
END;

BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('CHECKING DEFAULT VALUE FOR P_INCIDENT.INCIDENT_NUM...');
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_INCIDENT
  WHERE DOG_ID = '10002' 
;
IF VARROWCOUNT <> 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test record found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
Insert into P_INCIDENT (DOG_ID,INCIDENT_TYPE,DATE_OF_INCIDENT,HAS_MAJOR_HUMAN_INJURY,INC_DESCRIPTION) values ('10002','BITES HUMAN',to_date('12-MAR-10','DD-MON-RR'),'Y','Bit mailcarrier - required surgical repair');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....NO DEFAULT SET');
END;
BEGIN
 BEGIN
  VARNUMBER := 12.34;
  SELECT	INCIDENT_NUM INTO VARNUMBER
  FROM		P_INCIDENT
  WHERE DOG_ID = '10002'  
;
EXCEPTION 
WHEN OTHERS THEN
 DBMS_OUTPUT.PUT_LINE('    ....INSERTED DEFAULT VALUE NOT FOUND');
 END;
IF (VARNUMBER <> 1.00) OR VARNUMBER = 12.34 OR VARNUMBER IS NULL THEN
DBMS_OUTPUT.PUT_LINE('    ....FAILED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
DBMS_OUTPUT.PUT_LINE('    ....PASSED');
END IF;
END;
END IF;
END;


BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('CHECKING DEFAULT VALUE FOR P_INCIDENT.INCIDENT_TYPE...');
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_INCIDENT
  WHERE DOG_ID = '10002' 
;
IF VARROWCOUNT <> 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test record found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
Insert into P_INCIDENT (DOG_ID,INCIDENT_NUM,DATE_OF_INCIDENT,HAS_MAJOR_HUMAN_INJURY,INC_DESCRIPTION) values ('10002',1,to_date('12-MAR-10','DD-MON-RR'),'Y','Bit mailcarrier - required surgical repair');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....NO DEFAULT SET');
END;
BEGIN
 BEGIN
  VARSTRING := 'EMPTY';
  SELECT	INCIDENT_TYPE INTO VARSTRING
  FROM		P_INCIDENT
  WHERE DOG_ID = '10002'  
;
EXCEPTION 
WHEN OTHERS THEN
 DBMS_OUTPUT.PUT_LINE('    ....INSERTED DEFAULT VALUE NOT FOUND');
 END;
IF (VARSTRING <> 'OFF LEASH') OR VARSTRING = 'EMPTY' OR VARNUMBER IS NULL THEN
DBMS_OUTPUT.PUT_LINE('    ....FAILED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
DBMS_OUTPUT.PUT_LINE('    ....PASSED');
END IF;
END;
END IF;
END;

BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('CHECKING DEFAULT VALUE FOR P_INCIDENT.DATE_OF_INCIDENT...');
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_INCIDENT
  WHERE DOG_ID = '10002' 
;
IF VARROWCOUNT <> 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test record found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
Insert into P_INCIDENT (DOG_ID,INCIDENT_NUM,INCIDENT_TYPE,HAS_MAJOR_HUMAN_INJURY,INC_DESCRIPTION) values ('10002',1,'BITES HUMAN','Y','Bit mailcarrier - required surgical repair');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....NO DEFAULT SET');
END;
BEGIN
 BEGIN
  VARDATE := '04-JUL-1976';
  SELECT	DATE_OF_INCIDENT INTO VARDATE
	FROM		P_INCIDENT
  WHERE DOG_ID = '10002'
;
EXCEPTION 
WHEN OTHERS THEN
 DBMS_OUTPUT.PUT_LINE('    ....INSERTED DEFAULT VALUE NOT FOUND');
 END;
IF VARDATE > (SYSDATE +.10) OR (VARDATE < SYSDATE - .10) OR VARDATE = '04-JUL-1976' OR VARDATE IS NULL THEN
DBMS_OUTPUT.PUT_LINE('    ....FAILED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
DBMS_OUTPUT.PUT_LINE('    ....PASSED');
END IF;
END;
END IF;
END;


BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('CHECKING DEFAULT VALUE FOR P_INCIDENT.HAS_MAJOR_HUMAN_INJURY...');
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_INCIDENT
  WHERE DOG_ID = '10002' 
;
IF VARROWCOUNT <> 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test record found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
Insert into P_INCIDENT (DOG_ID,INCIDENT_NUM,INCIDENT_TYPE,DATE_OF_INCIDENT,INC_DESCRIPTION) values ('10002',1,'OFF LEASH',to_date('12-MAR-10','DD-MON-RR'),'Bit mailcarrier - required surgical repair');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....NO DEFAULT SET');
END;
BEGIN
 BEGIN
  VARSTRING := 'EMPTY';
  SELECT	HAS_MAJOR_HUMAN_INJURY INTO VARSTRING
  FROM		P_INCIDENT
  WHERE DOG_ID = '10002'  
;
EXCEPTION 
WHEN OTHERS THEN
 DBMS_OUTPUT.PUT_LINE('    ....INSERTED DEFAULT VALUE NOT FOUND');
 END;
IF (VARSTRING <> 'N') OR VARSTRING = 'EMPTY' OR VARNUMBER IS NULL THEN
DBMS_OUTPUT.PUT_LINE('    ....FAILED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
DBMS_OUTPUT.PUT_LINE('    ....PASSED');
END IF;
END;
END IF;
END;


BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('CHECKING DEFAULT VALUE FOR P_OWNER.CITY...');
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_OWNER
  WHERE OWNER_ID = '10000' 
;
IF VARROWCOUNT <> 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test record found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
Insert into P_OWNER (OWNER_ID,OWNER_FNAME,OWNER_LNAME,STREETADDRESS1,STREETADDRESS2,STATE,ZIP,TIMESTAMP,PHONE,EMAIL) values ('10000','Alan1','Barry1','10 Elm Drive1',null,'PA','18704',to_timestamp('05-JUL-14 11.29.10.000000000 AM','DD-MON-RR HH.MI.SS.FF AM'),'5705559631','abarry@someplace.com');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....NO DEFAULT SET');
END;
BEGIN
 BEGIN
  VARSTRING := 'EMPTY';
  SELECT	CITY INTO VARSTRING
  FROM		P_OWNER
  WHERE OWNER_ID = '10000'
;
EXCEPTION 
WHEN OTHERS THEN
 DBMS_OUTPUT.PUT_LINE('    ....INSERTED DEFAULT VALUE NOT FOUND');
 END;
IF (VARSTRING <> 'LARKSVILLE') OR VARSTRING = 'EMPTY' OR VARSTRING IS NULL THEN
DBMS_OUTPUT.PUT_LINE('    ....FAILED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
DBMS_OUTPUT.PUT_LINE('    ....PASSED');
END IF;
END;
END IF;
END;

BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('CHECKING DEFAULT VALUE FOR P_OWNER.STATE...');
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_OWNER
  WHERE OWNER_ID = '10000' 
;
IF VARROWCOUNT <> 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test record found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
Insert into P_OWNER (OWNER_ID,OWNER_FNAME,OWNER_LNAME,STREETADDRESS1,STREETADDRESS2,CITY,ZIP,TIMESTAMP,PHONE,EMAIL) values ('10000','Alan1','Barry1','10 Elm Drive1',null,'LARKSVILLE','18704',to_timestamp('05-JUL-14 11.29.10.000000000 AM','DD-MON-RR HH.MI.SS.FF AM'),'5705559631','abarry@someplace.com');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....NO DEFAULT SET');
END;
BEGIN
 BEGIN
  VARSTRING := 'EMPTY';
  SELECT	STATE INTO VARSTRING
  FROM		P_OWNER
  WHERE OWNER_ID = '10000'
;
EXCEPTION 
WHEN OTHERS THEN
 DBMS_OUTPUT.PUT_LINE('    ....INSERTED DEFAULT VALUE NOT FOUND');
 END;
IF (VARSTRING <> 'PA') OR VARSTRING = 'EMPTY' OR VARSTRING IS NULL THEN
DBMS_OUTPUT.PUT_LINE('    ....FAILED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
DBMS_OUTPUT.PUT_LINE('    ....PASSED');
END IF;
END;
END IF;
END;

BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('CHECKING DEFAULT VALUE FOR P_OWNER.ZIP...');
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_OWNER
  WHERE OWNER_ID = '10000' 
;
IF VARROWCOUNT <> 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test record found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
Insert into P_OWNER (OWNER_ID,OWNER_FNAME,OWNER_LNAME,STREETADDRESS1,STREETADDRESS2,CITY,STATE,TIMESTAMP,PHONE,EMAIL) values ('10000','Alan1','Barry1','10 Elm Drive1',null,'LARKSVILLE','PA',to_timestamp('05-JUL-14 11.29.10.000000000 AM','DD-MON-RR HH.MI.SS.FF AM'),'5705559631','abarry@someplace.com');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....NO DEFAULT SET');
END;
BEGIN
 BEGIN
  VARSTRING := 'EMPTY';
  SELECT	ZIP INTO VARSTRING
  FROM		P_OWNER
  WHERE OWNER_ID = '10000'
;
EXCEPTION 
WHEN OTHERS THEN
 DBMS_OUTPUT.PUT_LINE('    ....INSERTED DEFAULT VALUE NOT FOUND');
 END;
IF (VARSTRING <> '18704') OR VARSTRING = 'EMPTY' OR VARSTRING IS NULL THEN
DBMS_OUTPUT.PUT_LINE('    ....FAILED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
DBMS_OUTPUT.PUT_LINE('    ....PASSED');
END IF;
END;
END IF;
END;

BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('CHECKING DEFAULT VALUE FOR P_OWNER.TIMESTAMP...');
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_OWNER
  WHERE OWNER_ID = '10000' 
;
IF VARROWCOUNT <> 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test record found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
Insert into P_OWNER (OWNER_ID,OWNER_FNAME,OWNER_LNAME,STREETADDRESS1,STREETADDRESS2,CITY,STATE,ZIP,PHONE,EMAIL) values ('10000','Alan1','Barry1','10 Elm1 Drive',null,'LARKSVILLE','PA','18704','5705559631','abarry@someplace.com');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....NO DEFAULT SET');
END;
BEGIN
 BEGIN
  VARDATE := '04-JUL-1976';
  SELECT	TIMESTAMP INTO VARDATE
	FROM		P_OWNER
  WHERE OWNER_ID = '10000'
;
EXCEPTION 
WHEN OTHERS THEN
 DBMS_OUTPUT.PUT_LINE('    ....INSERTED DEFAULT VALUE NOT FOUND');
 END;
IF VARDATE > (SYSDATE +.10) OR (VARDATE < SYSDATE - .10) OR VARDATE = '04-JUL-1976' OR VARDATE IS NULL THEN
DBMS_OUTPUT.PUT_LINE('    ....FAILED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
DBMS_OUTPUT.PUT_LINE('    ....PASSED');
END IF;
END;
END IF;
END;

BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('CHECKING DEFAULT VALUE FOR P_PET.PET_DOG_LICENSE_NUM...');
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_PET
  WHERE   DOG_ID = '10003'
;
IF VARROWCOUNT <> 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test record found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
Insert into P_PET (DOG_ID,DATE_OF_LAST_PAYMENT,TOTAL_FEES_CURRENT_YEAR,TOTAL_PAYMENTS_CURRENT_YEAR,BALANCE_DUE_CURRENT_YEAR) values ('10003',to_date('05-JAN-14','DD-MON-RR'),30,15,15);
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....NO DEFAULT SET');
END;
BEGIN
 BEGIN
  VARSTRING := 'EMPTY';
  SELECT	PET_DOG_LICENSE_NUM INTO VARSTRING
  FROM		P_PET
  WHERE   DOG_ID = '10003'
;
EXCEPTION 
WHEN OTHERS THEN
  DBMS_OUTPUT.PUT_LINE('    ....INSERTED DEFAULT VALUE NOT FOUND');
 END;
IF VARSTRING <> 'UNLICENSED' OR VARSTRING = 'EMPTY' OR VARSTRING IS NULL THEN
DBMS_OUTPUT.PUT_LINE('    ....FAILED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
DBMS_OUTPUT.PUT_LINE('    ....PASSED');
END IF;
END;
END IF;
END;

BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('CHECKING DEFAULT VALUE FOR P_PET.DATE_OF_LAST_PAYMENT...');
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_PET
  WHERE DOG_ID = '10003' 
;
IF VARROWCOUNT <> 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test record found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
Insert into P_PET (DOG_ID,PET_DOG_LICENSE_NUM,TOTAL_FEES_CURRENT_YEAR,TOTAL_PAYMENTS_CURRENT_YEAR,BALANCE_DUE_CURRENT_YEAR) values ('10003','LPDE13501 ',30,15,15);
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....NO DEFAULT SET');
END;
BEGIN
 BEGIN
  VARDATE := '04-JUL-1976';
  SELECT	DATE_OF_LAST_PAYMENT INTO VARDATE
	FROM		P_PET
  WHERE DOG_ID = '10003'
;
EXCEPTION 
WHEN OTHERS THEN
 DBMS_OUTPUT.PUT_LINE('    ....INSERTED DEFAULT VALUE NOT FOUND');
 END;
IF VARDATE > (SYSDATE +.10) OR (VARDATE < SYSDATE - .10) OR VARDATE = '04-JUL-1976' OR VARDATE IS NULL THEN
DBMS_OUTPUT.PUT_LINE('    ....FAILED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
DBMS_OUTPUT.PUT_LINE('    ....PASSED');
END IF;
END;
END IF;
END;

BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('CHECKING DEFAULT VALUE FOR P_PET.TOTAL_FEES_CURRENT_YEAR...');
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_PET
  WHERE DOG_ID = '10003' 
;
IF VARROWCOUNT <> 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test record found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
Insert into P_PET (DOG_ID,PET_DOG_LICENSE_NUM,DATE_OF_LAST_PAYMENT,TOTAL_PAYMENTS_CURRENT_YEAR,BALANCE_DUE_CURRENT_YEAR) values ('10003','LPDEE501  ',to_date('05-JAN-14','DD-MON-RR'),15,15);
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....NO DEFAULT SET');
END;
BEGIN
 BEGIN
  VARNUMBER := 12.34;
  SELECT	TOTAL_FEES_CURRENT_YEAR INTO VARNUMBER
  FROM		P_PET
  WHERE DOG_ID = '10003'  
;
EXCEPTION 
WHEN OTHERS THEN
 DBMS_OUTPUT.PUT_LINE('    ....INSERTED DEFAULT VALUE NOT FOUND');
 END;
IF (VARNUMBER <> 25.00) OR VARNUMBER = 12.34 OR VARNUMBER IS NULL THEN
DBMS_OUTPUT.PUT_LINE('    ....FAILED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
DBMS_OUTPUT.PUT_LINE('    ....PASSED');
END IF;
END;
END IF;
END;

BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('CHECKING DEFAULT VALUE FOR P_PET.TOTAL_PAYMENTS_CURRENT_YEAR...');
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_PET
  WHERE DOG_ID = '10003' 
;
IF VARROWCOUNT <> 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test record found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
Insert into P_PET (DOG_ID,PET_DOG_LICENSE_NUM,DATE_OF_LAST_PAYMENT,TOTAL_FEES_CURRENT_YEAR,BALANCE_DUE_CURRENT_YEAR) values ('10003','LPD1EE01  ',to_date('05-JAN-14','DD-MON-RR'),30,15);
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....NO DEFAULT SET');
END;
BEGIN
 BEGIN
  VARNUMBER := 12.34;
  SELECT	TOTAL_PAYMENTS_CURRENT_YEAR INTO VARNUMBER
  FROM		P_PET
  WHERE DOG_ID = '10003'  
;
EXCEPTION 
WHEN OTHERS THEN
 DBMS_OUTPUT.PUT_LINE('    ....INSERTED DEFAULT VALUE NOT FOUND');
 END;
IF (VARNUMBER <> 0.00) OR VARNUMBER = 12.34 OR VARNUMBER IS NULL THEN
DBMS_OUTPUT.PUT_LINE('    ....FAILED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
DBMS_OUTPUT.PUT_LINE('    ....PASSED');
END IF;
END;
END IF;
END;

BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('CHECKING DEFAULT VALUE FOR P_PHOTO.PHOTO_FILENAME...');
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_PHOTO
  WHERE   PHOTO_ID = '11111'
;
IF VARROWCOUNT <> 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test record found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
Insert into P_PHOTO (PHOTO_ID,PHOTO_TIMESTAMP,DOG_ID) values ('11111',to_timestamp('01-JUL-14 12.41.28.000000000 PM','DD-MON-RR HH.MI.SS.FF AM'),'10001');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....NO DEFAULT SET');
END;
BEGIN
 BEGIN
  VARSTRING := 'EMPTY';
  SELECT	PHOTO_FILENAME INTO VARSTRING
  FROM		P_PHOTO
  WHERE   PHOTO_ID = '11111'
;
EXCEPTION 
WHEN OTHERS THEN
  DBMS_OUTPUT.PUT_LINE('    ....INSERTED DEFAULT VALUE NOT FOUND');
 END;
IF VARSTRING <> 'NOIMAGE.JPG' OR VARSTRING = 'EMPTY' OR VARSTRING IS NULL THEN
DBMS_OUTPUT.PUT_LINE('    ....FAILED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
DBMS_OUTPUT.PUT_LINE('    ....PASSED');
END IF;
END;
END IF;
END;

BEGIN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE('CHECKING DEFAULT VALUE FOR P_PHOTO.PHOTO_TIMESTAMP...');
  SELECT	COUNT(*) INTO VARROWCOUNT
	FROM		P_PHOTO
  WHERE   PHOTO_ID = '11111'
;
IF VARROWCOUNT <> 0 THEN
DBMS_OUTPUT.PUT_LINE('    ....Aborted - test record found');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
BEGIN
Insert into P_PHOTO (PHOTO_ID,PHOTO_FILENAME,DOG_ID) values ('11111','2014rft.jpg','10001');
EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('    ....NO DEFAULT SET');
END;
BEGIN
 BEGIN
  VARDATE := '04-JUL-1976';
  SELECT	PHOTO_TIMESTAMP INTO VARDATE
	FROM		P_PHOTO
  WHERE   PHOTO_ID = '11111'
;
EXCEPTION 
WHEN OTHERS THEN
 DBMS_OUTPUT.PUT_LINE('    ....INSERTED DEFAULT VALUE NOT FOUND');
 END;
IF VARDATE > (SYSDATE +.10) OR (VARDATE < SYSDATE - .10) OR VARDATE = '04-JUL-1976' OR VARDATE IS NULL THEN
DBMS_OUTPUT.PUT_LINE('    ....FAILED');
INCORRECTCOUNT := INCORRECTCOUNT + 1;
DBMS_OUTPUT.PUT_LINE('##### NOTE ERROR ABOVE #####');
ELSE
DBMS_OUTPUT.PUT_LINE('    ....PASSED');
END IF;
END;
END IF;
END;
  ROLLBACK ;

BEGIN
	DBMS_OUTPUT.PUT_LINE('********************************************************************');
	DBMS_OUTPUT.PUT_LINE('********************************************************************');
	DBMS_OUTPUT.PUT_LINE('***  You have '||INCORRECTCOUNT||' errors that need to be fixed (see detail above)  ***');
    IF INCORRECTCOUNT = 0 THEN
    	DBMS_OUTPUT.PUT_LINE('***             C O N G R A T U L A T I O N S ! ! !              ***');
    	DBMS_OUTPUT.PUT_LINE('***   (Do not forget to submit your DDL statements on Learn!)    ***');
    END IF;
	DBMS_OUTPUT.PUT_LINE('********************************************************************');
	DBMS_OUTPUT.PUT_LINE('********************************************************************');

END;

  RETURN;
END;



